"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/notifications/[id]/route";
exports.ids = ["app/api/notifications/[id]/route"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("node:async_hooks");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnotifications%2F%5Bid%5D%2Froute&page=%2Fapi%2Fnotifications%2F%5Bid%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2F%5Bid%5D%2Froute.js&appDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnotifications%2F%5Bid%5D%2Froute&page=%2Fapi%2Fnotifications%2F%5Bid%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2F%5Bid%5D%2Froute.js&appDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_bacze_Project_GroupShare_groupshare_project_src_app_api_notifications_id_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/notifications/[id]/route.js */ \"(rsc)/./src/app/api/notifications/[id]/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/notifications/[id]/route\",\n        pathname: \"/api/notifications/[id]\",\n        filename: \"route\",\n        bundlePath: \"app/api/notifications/[id]/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\bacze\\\\Project\\\\GroupShare\\\\groupshare-project\\\\src\\\\app\\\\api\\\\notifications\\\\[id]\\\\route.js\",\n    nextConfigOutput,\n    userland: C_Users_bacze_Project_GroupShare_groupshare_project_src_app_api_notifications_id_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/notifications/[id]/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZub3RpZmljYXRpb25zJTJGJTVCaWQlNUQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRm5vdGlmaWNhdGlvbnMlMkYlNUJpZCU1RCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRm5vdGlmaWNhdGlvbnMlMkYlNUJpZCU1RCUyRnJvdXRlLmpzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNiYWN6ZSU1Q1Byb2plY3QlNUNHcm91cFNoYXJlJTVDZ3JvdXBzaGFyZS1wcm9qZWN0JTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNiYWN6ZSU1Q1Byb2plY3QlNUNHcm91cFNoYXJlJTVDZ3JvdXBzaGFyZS1wcm9qZWN0JmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUN1RDtBQUNwSTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2dyb3Vwc2hhcmUtcHJvamVjdC8/MGYxNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxiYWN6ZVxcXFxQcm9qZWN0XFxcXEdyb3VwU2hhcmVcXFxcZ3JvdXBzaGFyZS1wcm9qZWN0XFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXG5vdGlmaWNhdGlvbnNcXFxcW2lkXVxcXFxyb3V0ZS5qc1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvbm90aWZpY2F0aW9ucy9baWRdL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvbm90aWZpY2F0aW9ucy9baWRdXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9ub3RpZmljYXRpb25zL1tpZF0vcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxiYWN6ZVxcXFxQcm9qZWN0XFxcXEdyb3VwU2hhcmVcXFxcZ3JvdXBzaGFyZS1wcm9qZWN0XFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXG5vdGlmaWNhdGlvbnNcXFxcW2lkXVxcXFxyb3V0ZS5qc1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvbm90aWZpY2F0aW9ucy9baWRdL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnotifications%2F%5Bid%5D%2Froute&page=%2Fapi%2Fnotifications%2F%5Bid%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2F%5Bid%5D%2Froute.js&appDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/notifications/[id]/route.js":
/*!*************************************************!*\
  !*** ./src/app/api/notifications/[id]/route.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   PATCH: () => (/* binding */ PATCH)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(rsc)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js\");\n/* harmony import */ var _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/database/supabase-admin-client */ \"(rsc)/./src/lib/database/supabase-admin-client.js\");\n/* harmony import */ var _services_notification_notification_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/services/notification/notification-service */ \"(rsc)/./src/services/notification/notification-service.js\");\n// src/app/api/notifications/[id]/route.js\n\n\n\n\n/**\r\n * GET /api/notifications/[id]\r\n * Pobiera pojedyncze powiadomienie\r\n */ async function GET(request, { params }) {\n    try {\n        const { id } = params;\n        // Sprawdź autentykację\n        const user = await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__.currentUser)();\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        // Pobierz ID profilu użytkownika\n        const { data: userProfile } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"user_profiles\").select(\"id\").eq(\"external_auth_id\", user.id).single();\n        if (!userProfile) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User profile not found\"\n            }, {\n                status: 404\n            });\n        }\n        // Pobierz powiadomienie z bazy danych\n        const { data: notification, error } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"notifications\").select(\"*\").eq(\"id\", id).eq(\"user_id\", userProfile.id).single();\n        if (error) {\n            console.error(\"Error fetching notification:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to fetch notification\",\n                details: error.message\n            }, {\n                status: 500\n            });\n        }\n        if (!notification) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Notification not found\"\n            }, {\n                status: 404\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(notification);\n    } catch (error) {\n        console.error(\"Error fetching notification:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch notification\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n/**\r\n * PATCH /api/notifications/[id]\r\n * Aktualizuje status przeczytania pojedynczego powiadomienia\r\n */ async function PATCH(request, { params }) {\n    try {\n        const { id } = params;\n        // Sprawdź autentykację\n        const user = await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__.currentUser)();\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        // Pobierz parametry z body (is_read)\n        const body = await request.json();\n        const { is_read } = body;\n        if (is_read === undefined) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"is_read field is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Pobierz ID profilu użytkownika\n        const { data: userProfile } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"user_profiles\").select(\"id\").eq(\"external_auth_id\", user.id).single();\n        if (!userProfile) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User profile not found\"\n            }, {\n                status: 404\n            });\n        }\n        // Zaktualizuj powiadomienie - używając bezpośredniego update zamiast service dla większej kontroli\n        const { data, error } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"notifications\").update({\n            is_read\n        }).eq(\"id\", id).eq(\"user_id\", userProfile.id).select().single();\n        if (error) {\n            console.error(\"Error updating notification:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to update notification\",\n                details: error.message\n            }, {\n                status: 500\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(data);\n    } catch (error) {\n        console.error(\"Error updating notification:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to update notification\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n/**\r\n * DELETE /api/notifications/[id]\r\n * Usuwa pojedyncze powiadomienie\r\n */ async function DELETE(request, { params }) {\n    try {\n        const { id } = params;\n        // Sprawdź autentykację\n        const user = await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__.currentUser)();\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        // Pobierz ID profilu użytkownika\n        const { data: userProfile } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"user_profiles\").select(\"id\").eq(\"external_auth_id\", user.id).single();\n        if (!userProfile) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User profile not found\"\n            }, {\n                status: 404\n            });\n        }\n        // Usuń powiadomienie przy użyciu serwisu\n        const success = await _services_notification_notification_service__WEBPACK_IMPORTED_MODULE_2__.notificationService.deleteNotification(id, userProfile.id);\n        if (!success) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to delete notification\"\n            }, {\n                status: 500\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true\n        });\n    } catch (error) {\n        console.error(\"Error deleting notification:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to delete notification\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/notifications/[id]/route.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/database/supabase-admin-client.js":
/*!***************************************************!*\
  !*** ./src/lib/database/supabase-admin-client.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNotification: () => (/* binding */ createNotification),\n/* harmony export */   createUserProfileAdmin: () => (/* binding */ createUserProfileAdmin),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getGroupMembersAdmin: () => (/* binding */ getGroupMembersAdmin),\n/* harmony export */   getSubscriptionPlatformsAdmin: () => (/* binding */ getSubscriptionPlatformsAdmin),\n/* harmony export */   getUnreadNotificationsCount: () => (/* binding */ getUnreadNotificationsCount),\n/* harmony export */   getUserByAuthIdAdmin: () => (/* binding */ getUserByAuthIdAdmin),\n/* harmony export */   handleSupabaseAdminError: () => (/* binding */ handleSupabaseAdminError),\n/* harmony export */   logAdminActivity: () => (/* binding */ logAdminActivity),\n/* harmony export */   updateUserProfileAdmin: () => (/* binding */ updateUserProfileAdmin)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n// src/lib/database/supabase-admin-client.js\n\n// Inicjalizacja klienta Supabase z uprawnieniami administratora\n// Dodajemy wartości domyślne w przypadku braku zmiennych środowiskowych\nconst supabaseUrl = \"https://nimrnohkesysfppcmujb.supabase.co\" || 0;\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY || \"\";\n// Sprawdzenie czy zmienne środowiskowe są ustawione\nif (!supabaseUrl || !supabaseServiceKey) {\n    console.error(\"Missing environment variables: NEXT_PUBLIC_SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY\");\n}\n// Sprawdź, czy zmienne są poprawne przed utworzeniem klienta\nconst isConfigValid = supabaseUrl && supabaseServiceKey;\n// Uwaga: Ten klient ma pełne uprawnienia do bazy danych, używaj ostrożnie!\nconst supabaseAdmin = isConfigValid ? (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseServiceKey, {\n    auth: {\n        persistSession: false,\n        autoRefreshToken: false\n    }\n}) : null;\n// Funkcja pomocnicza do obsługi błędów Supabase\nconst handleSupabaseAdminError = (error)=>{\n    console.error(\"Supabase Admin error:\", error);\n    return {\n        error: true,\n        message: error.message || \"Nieoczekiwany błąd administratora\",\n        code: error.code || \"unknown_error\",\n        details: error.details || null\n    };\n};\n// Funkcje administratora do zarządzania użytkownikami\n// Funkcja do tworzenia profilu użytkownika przez administratora\nconst createUserProfileAdmin = async (userProfile)=>{\n    try {\n        // Sprawdź czy klient jest dostępny\n        if (!supabaseAdmin) {\n            throw new Error(\"Database client is not initialized. Check environment variables.\");\n        }\n        const { data, error } = await supabaseAdmin.from(\"user_profiles\").insert([\n            userProfile\n        ]).select().single();\n        if (error) {\n            if (error.code === \"23505\") {\n                console.warn(\"Admin: Pr\\xf3ba utworzenia duplikatu profilu użytkownika:\", error);\n                // Jeśli profil już istnieje, pobierz go\n                const { data: existingUser, error: fetchError } = await supabaseAdmin.from(\"user_profiles\").select(\"*\").eq(\"external_auth_id\", userProfile.external_auth_id).single();\n                if (fetchError) {\n                    throw new Error(\"Nie można pobrać istniejącego profilu: \" + fetchError.message);\n                }\n                return existingUser;\n            } else {\n                throw new Error(error.message || \"Nie udało się utworzyć profilu użytkownika\");\n            }\n        }\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        throw error;\n    }\n};\n// Funkcja do pobierania profilu użytkownika przez administratora\nconst getUserByAuthIdAdmin = async (authId)=>{\n    if (!authId) return null;\n    try {\n        // Sprawdź czy klient jest dostępny\n        if (!supabaseAdmin) {\n            throw new Error(\"Database client is not initialized. Check environment variables.\");\n        }\n        const { data, error } = await supabaseAdmin.from(\"user_profiles\").select(\"*\").eq(\"external_auth_id\", authId).single();\n        if (error) {\n            if (error.code === \"PGRST116\") {\n                // Nie znaleziono - to normalny przypadek\n                return null;\n            } else {\n                console.error(\"Admin: Błąd pobierania profilu użytkownika:\", error);\n                throw new Error(error.message || \"Nie udało się pobrać profilu użytkownika\");\n            }\n        }\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        throw error;\n    }\n};\n// Funkcja do aktualizacji profilu użytkownika przez administratora\nconst updateUserProfileAdmin = async (userId, updates)=>{\n    try {\n        // Sprawdź czy klient jest dostępny\n        if (!supabaseAdmin) {\n            throw new Error(\"Database client is not initialized. Check environment variables.\");\n        }\n        const { data, error } = await supabaseAdmin.from(\"user_profiles\").update(updates).eq(\"id\", userId).select().single();\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        throw error;\n    }\n};\n// Funkcja do pobierania platform subskrypcyjnych przez administratora\nconst getSubscriptionPlatformsAdmin = async ()=>{\n    try {\n        // Sprawdź czy klient jest dostępny\n        if (!supabaseAdmin) {\n            throw new Error(\"Database client is not initialized. Check environment variables.\");\n        }\n        const { data, error } = await supabaseAdmin.from(\"subscription_platforms\").select(\"*\").order(\"name\");\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        return [];\n    }\n};\n// Funkcja do pobierania członków grupy przez administratora\nconst getGroupMembersAdmin = async (groupId)=>{\n    try {\n        // Sprawdź czy klient jest dostępny\n        if (!supabaseAdmin) {\n            throw new Error(\"Database client is not initialized. Check environment variables.\");\n        }\n        const { data, error } = await supabaseAdmin.from(\"group_members\").select(`\r\n        *,\r\n        user:user_profiles(id, display_name, avatar_url, email)\r\n      `).eq(\"group_id\", groupId);\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        return [];\n    }\n};\n// Zapisz wszystkie aktywności administratora do logu bezpieczeństwa\nconst logAdminActivity = async (action, resourceType, resourceId, details = {})=>{\n    try {\n        // Sprawdź czy klient jest dostępny\n        if (!supabaseAdmin) {\n            console.error(\"Database client is not initialized. Could not log activity.\");\n            return;\n        }\n        const { data, error } = await supabaseAdmin.from(\"security_logs\").insert([\n            {\n                action_type: action,\n                resource_type: resourceType,\n                resource_id: resourceId,\n                status: \"success\",\n                details: details\n            }\n        ]);\n        if (error) console.error(\"Błąd logowania aktywności administratora:\", error);\n    } catch (error) {\n        console.error(\"Wyjątek podczas logowania aktywności administratora:\", error);\n    }\n};\n// Funkcja do zarządzania powiadomieniami użytkowników\nconst createNotification = async (userId, type, title, content, relatedEntityType = null, relatedEntityId = null)=>{\n    try {\n        // Sprawdź czy klient jest dostępny\n        if (!supabaseAdmin) {\n            throw new Error(\"Database client is not initialized. Check environment variables.\");\n        }\n        const { data, error } = await supabaseAdmin.from(\"notifications\").insert([\n            {\n                user_id: userId,\n                type,\n                title,\n                content,\n                related_entity_type: relatedEntityType,\n                related_entity_id: relatedEntityId,\n                is_read: false,\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n            }\n        ]).select().single();\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        throw error;\n    }\n};\n// Funkcja do pobierania nieprzeczytanych powiadomień użytkownika\nconst getUnreadNotificationsCount = async (userId)=>{\n    try {\n        // Sprawdź czy klient jest dostępny\n        if (!supabaseAdmin) {\n            throw new Error(\"Database client is not initialized. Check environment variables.\");\n        }\n        const { count, error } = await supabaseAdmin.from(\"notifications\").select(\"*\", {\n            count: \"exact\",\n            head: true\n        }).eq(\"user_id\", userId).eq(\"is_read\", false);\n        if (error) throw error;\n        return count || 0;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        return 0;\n    }\n};\n// Sprawdź czy klient jest poprawnie skonfigurowany\nif (!supabaseAdmin) {\n    console.error(\"UWAGA: Klient supabaseAdmin nie został zainicjalizowany poprawnie. Upewnij się, że zmienne środowiskowe są ustawione.\");\n}\n// Eksport klienta administratora jako domyślny\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (supabaseAdmin);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database/supabase-admin-client.js\n");

/***/ }),

/***/ "(rsc)/./src/services/notification/notification-service.js":
/*!***********************************************************!*\
  !*** ./src/services/notification/notification-service.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   notificationService: () => (/* binding */ notificationService)\n/* harmony export */ });\n/* harmony import */ var _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/database/supabase-admin-client */ \"(rsc)/./src/lib/database/supabase-admin-client.js\");\n// src/services/notification/notification-service.js\n\nclass NotificationService {\n    /**\r\n   * Creates a new notification\r\n   * @param {string} userId - ID of the user to notify\r\n   * @param {string} type - Type of notification (invite, message, purchase, dispute)\r\n   * @param {string} title - Title of the notification\r\n   * @param {string} content - Content of the notification\r\n   * @param {string} relatedEntityType - Type of related entity (optional)\r\n   * @param {string} relatedEntityId - ID of related entity (optional)\r\n   * @param {string} priority - Priority (high, normal, low) (optional)\r\n   * @param {number} ttl - Time to live in days (0 = no expiration) (optional)\r\n   * @returns {Promise<Object>} Created notification\r\n   */ async createNotification(userId, type, title, content, relatedEntityType = null, relatedEntityId = null, priority = \"normal\", ttl = 0) {\n        try {\n            const notification = {\n                user_id: userId,\n                type,\n                title,\n                content,\n                related_entity_type: relatedEntityType,\n                related_entity_id: relatedEntityId,\n                priority,\n                is_read: false,\n                created_at: new Date().toISOString()\n            };\n            const { data, error } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].from(\"notifications\").insert(notification).select().single();\n            if (error) throw error;\n            return data;\n        } catch (error) {\n            console.error(\"Error creating notification:\", error);\n            throw new Error(`Failed to create notification: ${error.message}`);\n        }\n    }\n    /**\r\n   * Get unread notification count for a user\r\n   * @param {string} userId - User ID\r\n   * @returns {Promise<number>} Number of unread notifications\r\n   */ async getUnreadCount(userId) {\n        try {\n            const { count, error } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].from(\"notifications\").select(\"*\", {\n                count: \"exact\",\n                head: true\n            }).eq(\"user_id\", userId).eq(\"is_read\", false);\n            if (error) throw error;\n            return count || 0;\n        } catch (error) {\n            console.error(\"Error counting unread notifications:\", error);\n            return 0;\n        }\n    }\n    /**\r\n   * Mark notification as read\r\n   * @param {string|string[]} notificationIds - Notification ID or array of IDs\r\n   * @param {string} userId - User ID for verification\r\n   * @returns {Promise<boolean>} Success status\r\n   */ async markAsRead(notificationIds, userId) {\n        try {\n            // Convert single ID to array if needed\n            const ids = Array.isArray(notificationIds) ? notificationIds : [\n                notificationIds\n            ];\n            const { error } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].from(\"notifications\").update({\n                is_read: true\n            }).in(\"id\", ids).eq(\"user_id\", userId);\n            if (error) throw error;\n            return true;\n        } catch (error) {\n            console.error(\"Error marking notifications as read:\", error);\n            return false;\n        }\n    }\n    /**\r\n   * Mark all notifications as read for a user\r\n   * @param {string} userId - User ID\r\n   * @returns {Promise<boolean>} Success status\r\n   */ async markAllAsRead(userId) {\n        try {\n            const { error } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].from(\"notifications\").update({\n                is_read: true\n            }).eq(\"user_id\", userId).eq(\"is_read\", false);\n            if (error) throw error;\n            return true;\n        } catch (error) {\n            console.error(\"Error marking all notifications as read:\", error);\n            return false;\n        }\n    }\n    /**\r\n   * Delete a notification\r\n   * @param {string} notificationId - Notification ID\r\n   * @param {string} userId - User ID for verification\r\n   * @returns {Promise<boolean>} Success status\r\n   */ async deleteNotification(notificationId, userId) {\n        try {\n            const { error } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].from(\"notifications\").delete().eq(\"id\", notificationId).eq(\"user_id\", userId);\n            if (error) throw error;\n            return true;\n        } catch (error) {\n            console.error(\"Error deleting notification:\", error);\n            return false;\n        }\n    }\n    /**\r\n   * Get user notifications with filtering and pagination\r\n   * @param {string} userId - User ID\r\n   * @param {Object} options - Filter and pagination options\r\n   * @returns {Promise<Object>} Notifications and pagination info\r\n   */ async getUserNotifications(userId, options = {}) {\n        try {\n            // Build the query\n            let query = _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].from(\"notifications\").select(\"*\", {\n                count: \"exact\"\n            }).eq(\"user_id\", userId);\n            // Apply filters\n            if (options.type) {\n                query = query.eq(\"type\", options.type);\n            }\n            if (options.read !== null && options.read !== undefined) {\n                query = query.eq(\"is_read\", options.read);\n            }\n            if (options.priority) {\n                query = query.eq(\"priority\", options.priority);\n            }\n            if (options.relatedEntityType) {\n                query = query.eq(\"related_entity_type\", options.relatedEntityType);\n            }\n            if (options.relatedEntityId) {\n                query = query.eq(\"related_entity_id\", options.relatedEntityId);\n            }\n            // Order by creation date, newest first\n            query = query.order(\"created_at\", {\n                ascending: false\n            });\n            // Apply pagination\n            const page = options.page || 1;\n            const pageSize = options.pageSize || 10;\n            const start = (page - 1) * pageSize;\n            const end = start + pageSize - 1;\n            query = query.range(start, end);\n            // Execute the query\n            const { data, error, count } = await query;\n            if (error) throw error;\n            // Calculate pagination info\n            const totalPages = Math.ceil((count || 0) / pageSize);\n            return {\n                notifications: data || [],\n                pagination: {\n                    page,\n                    pageSize,\n                    total: count || 0,\n                    totalPages\n                }\n            };\n        } catch (error) {\n            console.error(\"Exception in getUserNotifications:\", error);\n            throw new Error(`Failed to fetch notifications: ${error.message}`);\n        }\n    }\n    /**\r\n   * Get notification preferences for a user\r\n   * @param {string} userId - User ID\r\n   * @returns {Promise<Object>} Notification preferences\r\n   */ async getNotificationPreferences(userId) {\n        try {\n            const { data, error } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].from(\"notification_preferences\").select(\"*\").eq(\"user_id\", userId).maybeSingle();\n            if (error) throw error;\n            // If no preferences exist, return defaults\n            if (!data) {\n                return {\n                    user_id: userId,\n                    email_enabled: true,\n                    push_enabled: false,\n                    notify_on_invite: true,\n                    notify_on_message: true,\n                    notify_on_purchase: true,\n                    notify_on_dispute: true,\n                    email_digest: \"daily\"\n                };\n            }\n            return data;\n        } catch (error) {\n            console.error(\"Error fetching notification preferences:\", error);\n            // Return defaults on error\n            return {\n                user_id: userId,\n                email_enabled: true,\n                push_enabled: false,\n                notify_on_invite: true,\n                notify_on_message: true,\n                notify_on_purchase: true,\n                notify_on_dispute: true,\n                email_digest: \"daily\"\n            };\n        }\n    }\n    /**\r\n   * Update notification preferences for a user\r\n   * @param {string} userId - User ID\r\n   * @param {Object} preferences - Updated preferences\r\n   * @returns {Promise<Object>} Updated preferences\r\n   */ async updateNotificationPreferences(userId, preferences) {\n        try {\n            // Check if preferences already exist\n            const { data: existing } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].from(\"notification_preferences\").select(\"id\").eq(\"user_id\", userId).maybeSingle();\n            let result;\n            if (existing) {\n                // Update existing preferences\n                const { data, error } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].from(\"notification_preferences\").update(preferences).eq(\"user_id\", userId).select().single();\n                if (error) throw error;\n                result = data;\n            } else {\n                // Create new preferences\n                const { data, error } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].from(\"notification_preferences\").insert({\n                    user_id: userId,\n                    ...preferences\n                }).select().single();\n                if (error) throw error;\n                result = data;\n            }\n            return result;\n        } catch (error) {\n            console.error(\"Error updating notification preferences:\", error);\n            throw new Error(`Failed to update notification preferences: ${error.message}`);\n        }\n    }\n}\n// Create and export a singleton instance\nconst notificationService = new NotificationService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/services/notification/notification-service.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@clerk","vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/tslib","vendor-chunks/webidl-conversions","vendor-chunks/cookie","vendor-chunks/map-obj","vendor-chunks/no-case","vendor-chunks/lower-case","vendor-chunks/snakecase-keys","vendor-chunks/snake-case","vendor-chunks/dot-case"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fnotifications%2F%5Bid%5D%2Froute&page=%2Fapi%2Fnotifications%2F%5Bid%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2F%5Bid%5D%2Froute.js&appDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();