"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/groups/[id]/members/route";
exports.ids = ["app/api/groups/[id]/members/route"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("node:async_hooks");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgroups%2F%5Bid%5D%2Fmembers%2Froute&page=%2Fapi%2Fgroups%2F%5Bid%5D%2Fmembers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgroups%2F%5Bid%5D%2Fmembers%2Froute.js&appDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgroups%2F%5Bid%5D%2Fmembers%2Froute&page=%2Fapi%2Fgroups%2F%5Bid%5D%2Fmembers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgroups%2F%5Bid%5D%2Fmembers%2Froute.js&appDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_bacze_Project_GroupShare_groupshare_project_src_app_api_groups_id_members_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/groups/[id]/members/route.js */ \"(rsc)/./src/app/api/groups/[id]/members/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/groups/[id]/members/route\",\n        pathname: \"/api/groups/[id]/members\",\n        filename: \"route\",\n        bundlePath: \"app/api/groups/[id]/members/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\bacze\\\\Project\\\\GroupShare\\\\groupshare-project\\\\src\\\\app\\\\api\\\\groups\\\\[id]\\\\members\\\\route.js\",\n    nextConfigOutput,\n    userland: C_Users_bacze_Project_GroupShare_groupshare_project_src_app_api_groups_id_members_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/groups/[id]/members/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZncm91cHMlMkYlNUJpZCU1RCUyRm1lbWJlcnMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmdyb3VwcyUyRiU1QmlkJTVEJTJGbWVtYmVycyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmdyb3VwcyUyRiU1QmlkJTVEJTJGbWVtYmVycyUyRnJvdXRlLmpzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNiYWN6ZSU1Q1Byb2plY3QlNUNHcm91cFNoYXJlJTVDZ3JvdXBzaGFyZS1wcm9qZWN0JTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNiYWN6ZSU1Q1Byb2plY3QlNUNHcm91cFNoYXJlJTVDZ3JvdXBzaGFyZS1wcm9qZWN0JmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUN5RDtBQUN0STtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2dyb3Vwc2hhcmUtcHJvamVjdC8/ZTVmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxiYWN6ZVxcXFxQcm9qZWN0XFxcXEdyb3VwU2hhcmVcXFxcZ3JvdXBzaGFyZS1wcm9qZWN0XFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXGdyb3Vwc1xcXFxbaWRdXFxcXG1lbWJlcnNcXFxccm91dGUuanNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2dyb3Vwcy9baWRdL21lbWJlcnMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9ncm91cHMvW2lkXS9tZW1iZXJzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9ncm91cHMvW2lkXS9tZW1iZXJzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcYmFjemVcXFxcUHJvamVjdFxcXFxHcm91cFNoYXJlXFxcXGdyb3Vwc2hhcmUtcHJvamVjdFxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxncm91cHNcXFxcW2lkXVxcXFxtZW1iZXJzXFxcXHJvdXRlLmpzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9ncm91cHMvW2lkXS9tZW1iZXJzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgroups%2F%5Bid%5D%2Fmembers%2Froute&page=%2Fapi%2Fgroups%2F%5Bid%5D%2Fmembers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgroups%2F%5Bid%5D%2Fmembers%2Froute.js&appDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/groups/[id]/members/route.js":
/*!**************************************************!*\
  !*** ./src/app/api/groups/[id]/members/route.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   PATCH: () => (/* binding */ PATCH),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(rsc)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js\");\n/* harmony import */ var _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/database/supabase-admin-client */ \"(rsc)/./src/lib/database/supabase-admin-client.js\");\n// src/app/api/groups/[id]/members/route.js\n\n\n\n/**\r\n * GET /api/groups/[id]/members\r\n * Pobiera członków grupy\r\n */ async function GET(request, { params }) {\n    try {\n        const { id: groupId } = params;\n        // Sprawdź autentykację\n        const user = await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_2__.currentUser)();\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        // Pobierz profil użytkownika\n        const { data: userProfile, error: profileError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"user_profiles\").select(\"id\").eq(\"external_auth_id\", user.id).maybeSingle(); // używamy maybeSingle zamiast single\n        if (profileError && profileError.code !== \"PGRST116\") {\n            console.error(\"Error fetching user profile:\", profileError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to fetch user profile\",\n                details: profileError\n            }, {\n                status: 500\n            });\n        }\n        if (!userProfile) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User profile not found\"\n            }, {\n                status: 404\n            });\n        }\n        // Sprawdź, czy użytkownik należy do grupy\n        const { data: membership, error: membershipError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"group_members\").select(\"role, status\").eq(\"user_id\", userProfile.id).eq(\"group_id\", groupId).maybeSingle();\n        // Sprawdź, czy użytkownik jest właścicielem grupy\n        const { data: group, error: groupError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"groups\").select(\"owner_id\").eq(\"id\", groupId).single();\n        if (groupError) {\n            console.error(\"Error fetching group:\", groupError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Group not found\",\n                details: groupError\n            }, {\n                status: 404\n            });\n        }\n        const isOwner = group.owner_id === userProfile.id;\n        const isMember = membership && membership.status === \"active\";\n        // Sprawdź uprawnienia - tylko członkowie grupy mogą widzieć innych członków\n        if (!isOwner && !isMember) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"You do not have permission to view group members\"\n            }, {\n                status: 403\n            });\n        }\n        // Podejście alternatywne - najpierw pobieramy członków bez zagnieżdżania\n        const { data: members, error: membersError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"group_members\").select(\"id, user_id, role, status, joined_at, created_at\").eq(\"group_id\", groupId).eq(\"status\", \"active\"); // tylko aktywni członkowie\n        if (membersError) {\n            console.error(\"Error fetching group members:\", membersError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to fetch group members\",\n                details: membersError\n            }, {\n                status: 500\n            });\n        }\n        // Teraz pobieramy dane profilowe dla każdego członka osobno\n        const membersWithProfiles = await Promise.all(members.map(async (member)=>{\n            const { data: userProfile, error: userError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"user_profiles\").select(\"id, display_name, avatar_url, email, verification_level, rating_avg\").eq(\"id\", member.user_id).single();\n            if (userError) {\n                console.warn(`Error fetching profile for user ${member.user_id}:`, userError);\n                return {\n                    ...member,\n                    user: null,\n                    isOwner: member.user_id === group.owner_id\n                };\n            }\n            return {\n                ...member,\n                user: userProfile,\n                isOwner: member.user_id === group.owner_id\n            };\n        }));\n        console.log(`Successfully fetched ${membersWithProfiles.length} members for group ${groupId}`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(membersWithProfiles);\n    } catch (error) {\n        console.error(\"Unexpected error in GET /api/groups/[id]/members:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"An unexpected error occurred\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n/**\r\n * POST /api/groups/[id]/members\r\n * Dodaje nowego członka do grupy\r\n */ async function POST(request, { params }) {\n    try {\n        const { id: groupId } = params;\n        // Sprawdź autentykację\n        const user = await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_2__.currentUser)();\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        // Pobierz dane z żądania\n        const { email, role = \"member\", userId } = await request.json();\n        if (!email && !userId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Either email or userId is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Pobierz profil użytkownika\n        const { data: userProfile, error: profileError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"user_profiles\").select(\"id\").eq(\"external_auth_id\", user.id).maybeSingle();\n        if (profileError && profileError.code !== \"PGRST116\") {\n            console.error(\"Error fetching user profile:\", profileError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to fetch user profile\",\n                details: profileError\n            }, {\n                status: 500\n            });\n        }\n        if (!userProfile) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User profile not found\"\n            }, {\n                status: 404\n            });\n        }\n        // Sprawdź, czy użytkownik ma uprawnienia do dodawania członków\n        const { data: group, error: groupError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"groups\").select(\"owner_id\").eq(\"id\", groupId).single();\n        if (groupError) {\n            console.error(\"Error fetching group:\", groupError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Group not found\",\n                details: groupError\n            }, {\n                status: 404\n            });\n        }\n        const isOwner = group.owner_id === userProfile.id;\n        if (!isOwner) {\n            // Sprawdź, czy użytkownik jest administratorem\n            const { data: membership, error: membershipError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"group_members\").select(\"role\").eq(\"user_id\", userProfile.id).eq(\"group_id\", groupId).eq(\"status\", \"active\").eq(\"role\", \"admin\").maybeSingle();\n            if (membershipError || !membership) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"You do not have permission to add members to this group\"\n                }, {\n                    status: 403\n                });\n            }\n        }\n        // Znajdź ID użytkownika do dodania\n        let targetUserId = userId;\n        if (!targetUserId && email) {\n            // Znajdź użytkownika po adresie email\n            const { data: targetUser, error: targetUserError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"user_profiles\").select(\"id\").eq(\"email\", email).maybeSingle();\n            if (targetUserError && targetUserError.code !== \"PGRST116\") {\n                console.error(\"Error finding user by email:\", targetUserError);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Failed to find user by email\",\n                    details: targetUserError\n                }, {\n                    status: 500\n                });\n            }\n            if (!targetUser) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"User with this email not found\"\n                }, {\n                    status: 404\n                });\n            }\n            targetUserId = targetUser.id;\n        }\n        // Sprawdź, czy użytkownik już jest członkiem grupy\n        const { data: existingMember, error: existingMemberError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"group_members\").select(\"id, status\").eq(\"user_id\", targetUserId).eq(\"group_id\", groupId).maybeSingle();\n        if (existingMember) {\n            // Jeśli członek już istnieje, ale został wcześniej usunięty/zawieszony\n            if (existingMember.status !== \"active\") {\n                // Aktualizuj istniejące członkostwo\n                const { data: updatedMember, error: updateError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"group_members\").update({\n                    status: \"active\",\n                    role: role,\n                    joined_at: new Date().toISOString(),\n                    updated_at: new Date().toISOString()\n                }).eq(\"id\", existingMember.id).select().single();\n                if (updateError) {\n                    console.error(\"Error updating group member:\", updateError);\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: \"Failed to update group member\",\n                        details: updateError\n                    }, {\n                        status: 500\n                    });\n                }\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(updatedMember);\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User is already a member of this group\"\n            }, {\n                status: 400\n            });\n        }\n        // Dodaj nowego członka\n        const { data: newMember, error: createError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"group_members\").insert({\n            group_id: groupId,\n            user_id: targetUserId,\n            role: role,\n            status: \"active\",\n            invited_by: userProfile.id,\n            joined_at: new Date().toISOString(),\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n        }).select().single();\n        if (createError) {\n            console.error(\"Error adding group member:\", createError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to add group member\",\n                details: createError\n            }, {\n                status: 500\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(newMember);\n    } catch (error) {\n        console.error(\"Unexpected error in POST /api/groups/[id]/members:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"An unexpected error occurred\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n/**\r\n * DELETE /api/groups/[id]/members/[memberId]\r\n * Usuwa członka z grupy\r\n */ async function DELETE(request, { params }) {\n    try {\n        const { id: groupId } = params;\n        const { searchParams } = new URL(request.url);\n        const memberId = searchParams.get(\"memberId\");\n        if (!memberId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Member ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        // Sprawdź autentykację\n        const user = await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_2__.currentUser)();\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        // Pobierz profil użytkownika\n        const { data: userProfile, error: profileError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"user_profiles\").select(\"id\").eq(\"external_auth_id\", user.id).maybeSingle();\n        if (profileError && profileError.code !== \"PGRST116\") {\n            console.error(\"Error fetching user profile:\", profileError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to fetch user profile\",\n                details: profileError\n            }, {\n                status: 500\n            });\n        }\n        if (!userProfile) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User profile not found\"\n            }, {\n                status: 404\n            });\n        }\n        // Pobierz dane grupy\n        const { data: group, error: groupError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"groups\").select(\"owner_id\").eq(\"id\", groupId).single();\n        if (groupError) {\n            console.error(\"Error fetching group:\", groupError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Group not found\",\n                details: groupError\n            }, {\n                status: 404\n            });\n        }\n        // Pobierz członka do usunięcia\n        const { data: member, error: memberError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"group_members\").select(\"user_id, role\").eq(\"id\", memberId).eq(\"group_id\", groupId).single();\n        if (memberError) {\n            console.error(\"Error fetching group member:\", memberError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Member not found in this group\",\n                details: memberError\n            }, {\n                status: 404\n            });\n        }\n        // Sprawdź uprawnienia do usunięcia członka\n        const isOwner = group.owner_id === userProfile.id;\n        const isAdmin = await isGroupAdmin(groupId, userProfile.id);\n        const isSelf = member.user_id === userProfile.id;\n        // Właściciel może usunąć każdego, admin może usunąć zwykłych członków, użytkownik może usunąć siebie\n        if (!isOwner && !isSelf && !(isAdmin && member.role !== \"admin\")) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"You do not have permission to remove this member\"\n            }, {\n                status: 403\n            });\n        }\n        // Nie można usunąć właściciela grupy\n        if (member.user_id === group.owner_id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Cannot remove the group owner\"\n            }, {\n                status: 400\n            });\n        }\n        // Usuń członka (w praktyce oznacz jako nieaktywnego)\n        const { error: deleteError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"group_members\").update({\n            status: \"removed\",\n            updated_at: new Date().toISOString()\n        }).eq(\"id\", memberId);\n        if (deleteError) {\n            console.error(\"Error removing group member:\", deleteError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to remove group member\",\n                details: deleteError\n            }, {\n                status: 500\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: \"Member removed successfully\"\n        });\n    } catch (error) {\n        console.error(\"Unexpected error in DELETE /api/groups/[id]/members:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"An unexpected error occurred\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n/**\r\n * PATCH /api/groups/[id]/members/[memberId]\r\n * Zmienia rolę członka grupy\r\n */ async function PATCH(request, { params }) {\n    try {\n        const { id: groupId } = params;\n        // Pobierz dane z żądania\n        const { memberId, role } = await request.json();\n        if (!memberId || !role) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Member ID and role are required\"\n            }, {\n                status: 400\n            });\n        }\n        if (![\n            \"admin\",\n            \"member\"\n        ].includes(role)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Invalid role. Must be either \"admin\" or \"member\"'\n            }, {\n                status: 400\n            });\n        }\n        // Sprawdź autentykację\n        const user = await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_2__.currentUser)();\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        // Pobierz profil użytkownika\n        const { data: userProfile, error: profileError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"user_profiles\").select(\"id\").eq(\"external_auth_id\", user.id).maybeSingle();\n        if (profileError && profileError.code !== \"PGRST116\") {\n            console.error(\"Error fetching user profile:\", profileError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to fetch user profile\",\n                details: profileError\n            }, {\n                status: 500\n            });\n        }\n        if (!userProfile) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User profile not found\"\n            }, {\n                status: 404\n            });\n        }\n        // Sprawdź, czy użytkownik ma uprawnienia do zmiany roli\n        const { data: group, error: groupError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"groups\").select(\"owner_id\").eq(\"id\", groupId).single();\n        if (groupError) {\n            console.error(\"Error fetching group:\", groupError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Group not found\",\n                details: groupError\n            }, {\n                status: 404\n            });\n        }\n        // Tylko właściciel grupy może zmieniać role\n        if (group.owner_id !== userProfile.id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Only the group owner can change member roles\"\n            }, {\n                status: 403\n            });\n        }\n        // Pobierz członka do aktualizacji\n        const { data: member, error: memberError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"group_members\").select(\"user_id\").eq(\"id\", memberId).eq(\"group_id\", groupId).single();\n        if (memberError) {\n            console.error(\"Error fetching group member:\", memberError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Member not found in this group\",\n                details: memberError\n            }, {\n                status: 404\n            });\n        }\n        // Nie można zmienić roli właściciela\n        if (member.user_id === group.owner_id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Cannot change the role of the group owner\"\n            }, {\n                status: 400\n            });\n        }\n        // Aktualizuj rolę członka\n        const { data: updatedMember, error: updateError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"group_members\").update({\n            role: role,\n            updated_at: new Date().toISOString()\n        }).eq(\"id\", memberId).select().single();\n        if (updateError) {\n            console.error(\"Error updating member role:\", updateError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to update member role\",\n                details: updateError\n            }, {\n                status: 500\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(updatedMember);\n    } catch (error) {\n        console.error(\"Unexpected error in PATCH /api/groups/[id]/members:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"An unexpected error occurred\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n// Funkcja pomocnicza do sprawdzania, czy użytkownik jest administratorem grupy\nasync function isGroupAdmin(groupId, userId) {\n    const { data, error } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\"group_members\").select(\"id\").eq(\"group_id\", groupId).eq(\"user_id\", userId).eq(\"status\", \"active\").eq(\"role\", \"admin\").maybeSingle();\n    return !error && !!data;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/groups/[id]/members/route.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/database/supabase-admin-client.js":
/*!***************************************************!*\
  !*** ./src/lib/database/supabase-admin-client.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createUserProfileAdmin: () => (/* binding */ createUserProfileAdmin),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getGroupMembersAdmin: () => (/* binding */ getGroupMembersAdmin),\n/* harmony export */   getSubscriptionPlatformsAdmin: () => (/* binding */ getSubscriptionPlatformsAdmin),\n/* harmony export */   getUserByAuthIdAdmin: () => (/* binding */ getUserByAuthIdAdmin),\n/* harmony export */   handleSupabaseAdminError: () => (/* binding */ handleSupabaseAdminError),\n/* harmony export */   logAdminActivity: () => (/* binding */ logAdminActivity),\n/* harmony export */   updateUserProfileAdmin: () => (/* binding */ updateUserProfileAdmin)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n// src/lib/supabase-admin-client.js\n\n// Inicjalizacja klienta Supabase z uprawnieniami administratora\nconst supabaseUrl = \"https://nimrnohkesysfppcmujb.supabase.co\";\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n// Sprawdzenie czy zmienne środowiskowe są ustawione\nif (!supabaseUrl || !supabaseServiceKey) {\n    console.error(\"Missing environment variables: NEXT_PUBLIC_SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY\");\n}\n// Uwaga: Ten klient ma pełne uprawnienia do bazy danych, używaj ostrożnie!\nconst supabaseAdmin = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseServiceKey, {\n    auth: {\n        persistSession: false,\n        autoRefreshToken: false\n    }\n});\n// Funkcja pomocnicza do obsługi błędów Supabase\nconst handleSupabaseAdminError = (error)=>{\n    console.error(\"Supabase Admin error:\", error);\n    return {\n        error: true,\n        message: error.message || \"Nieoczekiwany błąd administratora\",\n        code: error.code || \"unknown_error\",\n        details: error.details || null\n    };\n};\n// Funkcje administratora do zarządzania użytkownikami\n// Funkcja do tworzenia profilu użytkownika przez administratora\nconst createUserProfileAdmin = async (userProfile)=>{\n    try {\n        const { data, error } = await supabaseAdmin.from(\"user_profiles\").insert([\n            userProfile\n        ]).select().single();\n        if (error) {\n            if (error.code === \"23505\") {\n                console.warn(\"Admin: Pr\\xf3ba utworzenia duplikatu profilu użytkownika:\", error);\n                // Jeśli profil już istnieje, pobierz go\n                const { data: existingUser, error: fetchError } = await supabaseAdmin.from(\"user_profiles\").select(\"*\").eq(\"external_auth_id\", userProfile.external_auth_id).single();\n                if (fetchError) {\n                    throw new Error(\"Nie można pobrać istniejącego profilu: \" + fetchError.message);\n                }\n                return existingUser;\n            } else {\n                throw new Error(error.message || \"Nie udało się utworzyć profilu użytkownika\");\n            }\n        }\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        throw error;\n    }\n};\n// Funkcja do pobierania profilu użytkownika przez administratora\nconst getUserByAuthIdAdmin = async (authId)=>{\n    if (!authId) return null;\n    try {\n        const { data, error } = await supabaseAdmin.from(\"user_profiles\").select(\"*\").eq(\"external_auth_id\", authId).single();\n        if (error) {\n            if (error.code === \"PGRST116\") {\n                // Nie znaleziono - to normalny przypadek\n                return null;\n            } else {\n                console.error(\"Admin: Błąd pobierania profilu użytkownika:\", error);\n                throw new Error(error.message || \"Nie udało się pobrać profilu użytkownika\");\n            }\n        }\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        throw error;\n    }\n};\n// Funkcja do aktualizacji profilu użytkownika przez administratora\nconst updateUserProfileAdmin = async (userId, updates)=>{\n    try {\n        const { data, error } = await supabaseAdmin.from(\"user_profiles\").update(updates).eq(\"id\", userId).select().single();\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        throw error;\n    }\n};\n// Funkcja do pobierania platform subskrypcyjnych przez administratora\nconst getSubscriptionPlatformsAdmin = async ()=>{\n    try {\n        const { data, error } = await supabaseAdmin.from(\"subscription_platforms\").select(\"*\").order(\"name\");\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        return [];\n    }\n};\n// Funkcja do pobierania członków grupy przez administratora\nconst getGroupMembersAdmin = async (groupId)=>{\n    try {\n        const { data, error } = await supabaseAdmin.from(\"group_members\").select(`\r\n        *,\r\n        user:user_profiles(id, display_name, avatar_url, email)\r\n      `).eq(\"group_id\", groupId);\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        return [];\n    }\n};\n// Zapisz wszystkie aktywności administratora do logu bezpieczeństwa\nconst logAdminActivity = async (action, resourceType, resourceId, details = {})=>{\n    try {\n        const { data, error } = await supabaseAdmin.from(\"security_logs\").insert([\n            {\n                action_type: action,\n                resource_type: resourceType,\n                resource_id: resourceId,\n                status: \"success\",\n                details: details\n            }\n        ]);\n        if (error) console.error(\"Błąd logowania aktywności administratora:\", error);\n    } catch (error) {\n        console.error(\"Wyjątek podczas logowania aktywności administratora:\", error);\n    }\n};\n// Eksport klienta administratora jako domyślny\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (supabaseAdmin);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database/supabase-admin-client.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@clerk","vendor-chunks/next","vendor-chunks/tslib","vendor-chunks/cookie","vendor-chunks/map-obj","vendor-chunks/no-case","vendor-chunks/lower-case","vendor-chunks/snakecase-keys","vendor-chunks/snake-case","vendor-chunks/dot-case","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgroups%2F%5Bid%5D%2Fmembers%2Froute&page=%2Fapi%2Fgroups%2F%5Bid%5D%2Fmembers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgroups%2F%5Bid%5D%2Fmembers%2Froute.js&appDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();