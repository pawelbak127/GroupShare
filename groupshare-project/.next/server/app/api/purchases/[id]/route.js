"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/purchases/[id]/route";
exports.ids = ["app/api/purchases/[id]/route"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("node:async_hooks");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fpurchases%2F%5Bid%5D%2Froute&page=%2Fapi%2Fpurchases%2F%5Bid%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpurchases%2F%5Bid%5D%2Froute.js&appDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fpurchases%2F%5Bid%5D%2Froute&page=%2Fapi%2Fpurchases%2F%5Bid%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpurchases%2F%5Bid%5D%2Froute.js&appDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_bacze_Project_GroupShare_groupshare_project_src_app_api_purchases_id_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/purchases/[id]/route.js */ \"(rsc)/./src/app/api/purchases/[id]/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/purchases/[id]/route\",\n        pathname: \"/api/purchases/[id]\",\n        filename: \"route\",\n        bundlePath: \"app/api/purchases/[id]/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\bacze\\\\Project\\\\GroupShare\\\\groupshare-project\\\\src\\\\app\\\\api\\\\purchases\\\\[id]\\\\route.js\",\n    nextConfigOutput,\n    userland: C_Users_bacze_Project_GroupShare_groupshare_project_src_app_api_purchases_id_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/purchases/[id]/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZwdXJjaGFzZXMlMkYlNUJpZCU1RCUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGcHVyY2hhc2VzJTJGJTVCaWQlNUQlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZwdXJjaGFzZXMlMkYlNUJpZCU1RCUyRnJvdXRlLmpzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNiYWN6ZSU1Q1Byb2plY3QlNUNHcm91cFNoYXJlJTVDZ3JvdXBzaGFyZS1wcm9qZWN0JTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNiYWN6ZSU1Q1Byb2plY3QlNUNHcm91cFNoYXJlJTVDZ3JvdXBzaGFyZS1wcm9qZWN0JmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNtRDtBQUNoSTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2dyb3Vwc2hhcmUtcHJvamVjdC8/MzAwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxiYWN6ZVxcXFxQcm9qZWN0XFxcXEdyb3VwU2hhcmVcXFxcZ3JvdXBzaGFyZS1wcm9qZWN0XFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXHB1cmNoYXNlc1xcXFxbaWRdXFxcXHJvdXRlLmpzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9wdXJjaGFzZXMvW2lkXS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3B1cmNoYXNlcy9baWRdXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9wdXJjaGFzZXMvW2lkXS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXGJhY3plXFxcXFByb2plY3RcXFxcR3JvdXBTaGFyZVxcXFxncm91cHNoYXJlLXByb2plY3RcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxccHVyY2hhc2VzXFxcXFtpZF1cXFxccm91dGUuanNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3B1cmNoYXNlcy9baWRdL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fpurchases%2F%5Bid%5D%2Froute&page=%2Fapi%2Fpurchases%2F%5Bid%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpurchases%2F%5Bid%5D%2Froute.js&appDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/purchases/[id]/route.js":
/*!*********************************************!*\
  !*** ./src/app/api/purchases/[id]/route.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(rsc)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js\");\n/* harmony import */ var _lib_database_supabase_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../lib/database/supabase-client */ \"(rsc)/./src/lib/database/supabase-client.js\");\n/* harmony import */ var _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../lib/database/supabase-admin-client */ \"(rsc)/./src/lib/database/supabase-admin-client.js\");\n\n\n\n\n/**\r\n * GET /api/purchases/[id]\r\n * Pobiera szczegóły zakupu\r\n */ async function GET(request, { params }) {\n    try {\n        const { id } = params;\n        // Sprawdź parametry URL\n        const { searchParams } = new URL(request.url);\n        const isTransactionId = searchParams.get(\"transactionId\") === \"true\";\n        console.log(`Pobieranie szczegółów ${isTransactionId ? \"transakcji\" : \"zakupu\"} ${id}`);\n        // Sprawdź autentykację\n        const user = await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_3__.currentUser)();\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        console.log(`Pobieranie dla użytkownika ${user.id}`);\n        // Pobierz profil użytkownika\n        const { data: userProfile, error: profileError } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_2__[\"default\"].from(\"user_profiles\").select(\"id\").eq(\"external_auth_id\", user.id).single();\n        if (profileError) {\n            console.error(\"Error fetching user profile:\", profileError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to verify user profile\",\n                details: profileError\n            }, {\n                status: 500\n            });\n        }\n        if (!userProfile) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User profile not found\"\n            }, {\n                status: 404\n            });\n        }\n        let purchase;\n        let purchaseError;\n        if (isTransactionId) {\n            // Pobierz zakup na podstawie ID transakcji\n            console.log(`Szukam zakupu po ID transakcji: ${id}`);\n            const { data, error } = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_2__[\"default\"].from(\"transactions\").select(\"purchase_record_id\").eq(\"id\", id).single();\n            if (error) {\n                console.error(\"Error fetching transaction:\", error);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Transaction not found\",\n                    details: error\n                }, {\n                    status: 404\n                });\n            }\n            if (!data || !data.purchase_record_id) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Transaction does not have an associated purchase record\"\n                }, {\n                    status: 404\n                });\n            }\n            // Pobierz dane zakupu za pomocą ID purchase_record\n            const purchaseId = data.purchase_record_id;\n            console.log(`Znaleziono powiązany purchase_record_id: ${purchaseId}`);\n            const purchaseResult = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_2__[\"default\"].from(\"purchase_records\").select(`\r\n          *,\r\n          group_sub:group_subs(\r\n            *,\r\n            subscription_platforms(\r\n              id,\r\n              name,\r\n              icon\r\n            )\r\n          )\r\n        `).eq(\"id\", purchaseId).single();\n            purchase = purchaseResult.data;\n            purchaseError = purchaseResult.error;\n        } else {\n            // Standardowe pobieranie zakupu po ID\n            const result = await _lib_database_supabase_admin_client__WEBPACK_IMPORTED_MODULE_2__[\"default\"].from(\"purchase_records\").select(`\r\n          *,\r\n          group_sub:group_subs(\r\n            *,\r\n            subscription_platforms(\r\n              id,\r\n              name,\r\n              icon\r\n            )\r\n          )\r\n        `).eq(\"id\", id).single();\n            purchase = result.data;\n            purchaseError = result.error;\n        }\n        if (purchaseError) {\n            console.error(\"Error fetching purchase details:\", purchaseError);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Purchase record not found\",\n                details: purchaseError\n            }, {\n                status: 404\n            });\n        }\n        // Sprawdź, czy zakup należy do użytkownika\n        if (purchase.user_id !== userProfile.id) {\n            console.warn(`Attempted unauthorized access to purchase ${id} by user ${userProfile.id}`);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"You do not have permission to view this purchase\"\n            }, {\n                status: 403\n            });\n        }\n        console.log(`Szczegóły zakupu pobrane pomyślnie`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(purchase);\n    } catch (error) {\n        console.error(\"Error fetching purchase details:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch purchase details\",\n            details: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/purchases/[id]/route.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/database/supabase-admin-client.js":
/*!***************************************************!*\
  !*** ./src/lib/database/supabase-admin-client.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNotification: () => (/* binding */ createNotification),\n/* harmony export */   createUserProfileAdmin: () => (/* binding */ createUserProfileAdmin),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getGroupMembersAdmin: () => (/* binding */ getGroupMembersAdmin),\n/* harmony export */   getSubscriptionPlatformsAdmin: () => (/* binding */ getSubscriptionPlatformsAdmin),\n/* harmony export */   getUnreadNotificationsCount: () => (/* binding */ getUnreadNotificationsCount),\n/* harmony export */   getUserByAuthIdAdmin: () => (/* binding */ getUserByAuthIdAdmin),\n/* harmony export */   handleSupabaseAdminError: () => (/* binding */ handleSupabaseAdminError),\n/* harmony export */   logAdminActivity: () => (/* binding */ logAdminActivity),\n/* harmony export */   updateUserProfileAdmin: () => (/* binding */ updateUserProfileAdmin)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n// src/lib/database/supabase-admin-client.js\n\n// Inicjalizacja klienta Supabase z uprawnieniami administratora\n// Dodajemy wartości domyślne w przypadku braku zmiennych środowiskowych\nconst supabaseUrl = \"https://nimrnohkesysfppcmujb.supabase.co\" || 0;\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY || \"\";\n// Sprawdzenie czy zmienne środowiskowe są ustawione\nif (!supabaseUrl || !supabaseServiceKey) {\n    console.error(\"Missing environment variables: NEXT_PUBLIC_SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY\");\n}\n// Sprawdź, czy zmienne są poprawne przed utworzeniem klienta\nconst isConfigValid = supabaseUrl && supabaseServiceKey;\n// Uwaga: Ten klient ma pełne uprawnienia do bazy danych, używaj ostrożnie!\nconst supabaseAdmin = isConfigValid ? (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseServiceKey, {\n    auth: {\n        persistSession: false,\n        autoRefreshToken: false\n    }\n}) : null;\n// Funkcja pomocnicza do obsługi błędów Supabase\nconst handleSupabaseAdminError = (error)=>{\n    console.error(\"Supabase Admin error:\", error);\n    return {\n        error: true,\n        message: error.message || \"Nieoczekiwany błąd administratora\",\n        code: error.code || \"unknown_error\",\n        details: error.details || null\n    };\n};\n// Funkcje administratora do zarządzania użytkownikami\n// Funkcja do tworzenia profilu użytkownika przez administratora\nconst createUserProfileAdmin = async (userProfile)=>{\n    try {\n        // Sprawdź czy klient jest dostępny\n        if (!supabaseAdmin) {\n            throw new Error(\"Database client is not initialized. Check environment variables.\");\n        }\n        const { data, error } = await supabaseAdmin.from(\"user_profiles\").insert([\n            userProfile\n        ]).select().single();\n        if (error) {\n            if (error.code === \"23505\") {\n                console.warn(\"Admin: Pr\\xf3ba utworzenia duplikatu profilu użytkownika:\", error);\n                // Jeśli profil już istnieje, pobierz go\n                const { data: existingUser, error: fetchError } = await supabaseAdmin.from(\"user_profiles\").select(\"*\").eq(\"external_auth_id\", userProfile.external_auth_id).single();\n                if (fetchError) {\n                    throw new Error(\"Nie można pobrać istniejącego profilu: \" + fetchError.message);\n                }\n                return existingUser;\n            } else {\n                throw new Error(error.message || \"Nie udało się utworzyć profilu użytkownika\");\n            }\n        }\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        throw error;\n    }\n};\n// Funkcja do pobierania profilu użytkownika przez administratora\nconst getUserByAuthIdAdmin = async (authId)=>{\n    if (!authId) return null;\n    try {\n        // Sprawdź czy klient jest dostępny\n        if (!supabaseAdmin) {\n            throw new Error(\"Database client is not initialized. Check environment variables.\");\n        }\n        const { data, error } = await supabaseAdmin.from(\"user_profiles\").select(\"*\").eq(\"external_auth_id\", authId).single();\n        if (error) {\n            if (error.code === \"PGRST116\") {\n                // Nie znaleziono - to normalny przypadek\n                return null;\n            } else {\n                console.error(\"Admin: Błąd pobierania profilu użytkownika:\", error);\n                throw new Error(error.message || \"Nie udało się pobrać profilu użytkownika\");\n            }\n        }\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        throw error;\n    }\n};\n// Funkcja do aktualizacji profilu użytkownika przez administratora\nconst updateUserProfileAdmin = async (userId, updates)=>{\n    try {\n        // Sprawdź czy klient jest dostępny\n        if (!supabaseAdmin) {\n            throw new Error(\"Database client is not initialized. Check environment variables.\");\n        }\n        const { data, error } = await supabaseAdmin.from(\"user_profiles\").update(updates).eq(\"id\", userId).select().single();\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        throw error;\n    }\n};\n// Funkcja do pobierania platform subskrypcyjnych przez administratora\nconst getSubscriptionPlatformsAdmin = async ()=>{\n    try {\n        // Sprawdź czy klient jest dostępny\n        if (!supabaseAdmin) {\n            throw new Error(\"Database client is not initialized. Check environment variables.\");\n        }\n        const { data, error } = await supabaseAdmin.from(\"subscription_platforms\").select(\"*\").order(\"name\");\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        return [];\n    }\n};\n// Funkcja do pobierania członków grupy przez administratora\nconst getGroupMembersAdmin = async (groupId)=>{\n    try {\n        // Sprawdź czy klient jest dostępny\n        if (!supabaseAdmin) {\n            throw new Error(\"Database client is not initialized. Check environment variables.\");\n        }\n        const { data, error } = await supabaseAdmin.from(\"group_members\").select(`\r\n        *,\r\n        user:user_profiles(id, display_name, avatar_url, email)\r\n      `).eq(\"group_id\", groupId);\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        return [];\n    }\n};\n// Zapisz wszystkie aktywności administratora do logu bezpieczeństwa\nconst logAdminActivity = async (action, resourceType, resourceId, details = {})=>{\n    try {\n        // Sprawdź czy klient jest dostępny\n        if (!supabaseAdmin) {\n            console.error(\"Database client is not initialized. Could not log activity.\");\n            return;\n        }\n        const { data, error } = await supabaseAdmin.from(\"security_logs\").insert([\n            {\n                action_type: action,\n                resource_type: resourceType,\n                resource_id: resourceId,\n                status: \"success\",\n                details: details\n            }\n        ]);\n        if (error) console.error(\"Błąd logowania aktywności administratora:\", error);\n    } catch (error) {\n        console.error(\"Wyjątek podczas logowania aktywności administratora:\", error);\n    }\n};\n// Funkcja do zarządzania powiadomieniami użytkowników\nconst createNotification = async (userId, type, title, content, relatedEntityType = null, relatedEntityId = null)=>{\n    try {\n        // Sprawdź czy klient jest dostępny\n        if (!supabaseAdmin) {\n            throw new Error(\"Database client is not initialized. Check environment variables.\");\n        }\n        const { data, error } = await supabaseAdmin.from(\"notifications\").insert([\n            {\n                user_id: userId,\n                type,\n                title,\n                content,\n                related_entity_type: relatedEntityType,\n                related_entity_id: relatedEntityId,\n                is_read: false,\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n            }\n        ]).select().single();\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        throw error;\n    }\n};\n// Funkcja do pobierania nieprzeczytanych powiadomień użytkownika\nconst getUnreadNotificationsCount = async (userId)=>{\n    try {\n        // Sprawdź czy klient jest dostępny\n        if (!supabaseAdmin) {\n            throw new Error(\"Database client is not initialized. Check environment variables.\");\n        }\n        const { count, error } = await supabaseAdmin.from(\"notifications\").select(\"*\", {\n            count: \"exact\",\n            head: true\n        }).eq(\"user_id\", userId).eq(\"is_read\", false);\n        if (error) throw error;\n        return count || 0;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        return 0;\n    }\n};\n// Sprawdź czy klient jest poprawnie skonfigurowany\nif (!supabaseAdmin) {\n    console.error(\"UWAGA: Klient supabaseAdmin nie został zainicjalizowany poprawnie. Upewnij się, że zmienne środowiskowe są ustawione.\");\n}\n// Eksport klienta administratora jako domyślny\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (supabaseAdmin);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2RhdGFiYXNlL3N1cGFiYXNlLWFkbWluLWNsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBLDRDQUE0QztBQUNTO0FBRXJELGdFQUFnRTtBQUNoRSx3RUFBd0U7QUFDeEUsTUFBTUMsY0FBY0MsMENBQW9DLElBQUk7QUFDNUQsTUFBTUcscUJBQXFCSCxRQUFRQyxHQUFHLENBQUNHLHlCQUF5QixJQUFJO0FBRXBFLG9EQUFvRDtBQUNwRCxJQUFJLENBQUNMLGVBQWUsQ0FBQ0ksb0JBQW9CO0lBQ3ZDRSxRQUFRQyxLQUFLLENBQ1g7QUFFSjtBQUVBLDZEQUE2RDtBQUM3RCxNQUFNQyxnQkFBZ0JSLGVBQWVJO0FBRXJDLDJFQUEyRTtBQUMzRSxNQUFNSyxnQkFBZ0JELGdCQUNsQlQsbUVBQVlBLENBQUNDLGFBQWFJLG9CQUFvQjtJQUM1Q00sTUFBTTtRQUNKQyxnQkFBZ0I7UUFDaEJDLGtCQUFrQjtJQUNwQjtBQUNGLEtBQ0E7QUFFSixnREFBZ0Q7QUFDekMsTUFBTUMsMkJBQTJCLENBQUNOO0lBQ3ZDRCxRQUFRQyxLQUFLLENBQUMseUJBQXlCQTtJQUV2QyxPQUFPO1FBQ0xBLE9BQU87UUFDUE8sU0FBU1AsTUFBTU8sT0FBTyxJQUFJO1FBQzFCQyxNQUFNUixNQUFNUSxJQUFJLElBQUk7UUFDcEJDLFNBQVNULE1BQU1TLE9BQU8sSUFBSTtJQUM1QjtBQUNGLEVBQUU7QUFFRixzREFBc0Q7QUFFdEQsZ0VBQWdFO0FBQ3pELE1BQU1DLHlCQUF5QixPQUFPQztJQUMzQyxJQUFJO1FBQ0YsbUNBQW1DO1FBQ25DLElBQUksQ0FBQ1QsZUFBZTtZQUNsQixNQUFNLElBQUlVLE1BQU07UUFDbEI7UUFFQSxNQUFNLEVBQUVDLElBQUksRUFBRWIsS0FBSyxFQUFFLEdBQUcsTUFBTUUsY0FDM0JZLElBQUksQ0FBQyxpQkFDTEMsTUFBTSxDQUFDO1lBQUNKO1NBQVksRUFDcEJLLE1BQU0sR0FDTkMsTUFBTTtRQUVULElBQUlqQixP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QyxXQUFXO2dCQUNsQ0MsWUFBWSxJQUFJRixPQUFPQyxXQUFXO1lBQ3BDO1NBQUUsRUFDRHJDLE1BQU0sR0FDTkMsTUFBTTtRQUVULElBQUlqQixPQUFPLE1BQU1BO1FBRWpCLE9BQU9hO0lBQ1QsRUFBRSxPQUFPYixPQUFPO1FBQ2RNLHlCQUF5Qk47UUFDekIsTUFBTUE7SUFDUjtBQUNGLEVBQUU7QUFFRixpRUFBaUU7QUFDMUQsTUFBTXVELDhCQUE4QixPQUFPN0I7SUFDaEQsSUFBSTtRQUNGLG1DQUFtQztRQUNuQyxJQUFJLENBQUN4QixlQUFlO1lBQ2xCLE1BQU0sSUFBSVUsTUFBTTtRQUNsQjtRQUVBLE1BQU0sRUFBRTRDLEtBQUssRUFBRXhELEtBQUssRUFBRSxHQUFHLE1BQU1FLGNBQzVCWSxJQUFJLENBQUMsaUJBQ0xFLE1BQU0sQ0FBQyxLQUFLO1lBQUV3QyxPQUFPO1lBQVNDLE1BQU07UUFBSyxHQUN6Q3BDLEVBQUUsQ0FBQyxXQUFXSyxRQUNkTCxFQUFFLENBQUMsV0FBVztRQUVqQixJQUFJckIsT0FBTyxNQUFNQTtRQUVqQixPQUFPd0QsU0FBUztJQUNsQixFQUFFLE9BQU94RCxPQUFPO1FBQ2RNLHlCQUF5Qk47UUFDekIsT0FBTztJQUNUO0FBQ0YsRUFBRTtBQUVGLG1EQUFtRDtBQUNuRCxJQUFJLENBQUNFLGVBQWU7SUFDbEJILFFBQVFDLEtBQUssQ0FBQztBQUNoQjtBQUVBLCtDQUErQztBQUMvQyxpRUFBZUUsYUFBYUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2dyb3Vwc2hhcmUtcHJvamVjdC8uL3NyYy9saWIvZGF0YWJhc2Uvc3VwYWJhc2UtYWRtaW4tY2xpZW50LmpzPzM0NzciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9kYXRhYmFzZS9zdXBhYmFzZS1hZG1pbi1jbGllbnQuanNcclxuaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcclxuXHJcbi8vIEluaWNqYWxpemFjamEga2xpZW50YSBTdXBhYmFzZSB6IHVwcmF3bmllbmlhbWkgYWRtaW5pc3RyYXRvcmFcclxuLy8gRG9kYWplbXkgd2FydG/Fm2NpIGRvbXnFm2xuZSB3IHByenlwYWRrdSBicmFrdSB6bWllbm55Y2ggxZtyb2Rvd2lza293eWNoXHJcbmNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIHx8ICcnO1xyXG5jb25zdCBzdXBhYmFzZVNlcnZpY2VLZXkgPSBwcm9jZXNzLmVudi5TVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZIHx8ICcnO1xyXG5cclxuLy8gU3ByYXdkemVuaWUgY3p5IHptaWVubmUgxZtyb2Rvd2lza293ZSBzxIUgdXN0YXdpb25lXHJcbmlmICghc3VwYWJhc2VVcmwgfHwgIXN1cGFiYXNlU2VydmljZUtleSkge1xyXG4gIGNvbnNvbGUuZXJyb3IoXHJcbiAgICAnTWlzc2luZyBlbnZpcm9ubWVudCB2YXJpYWJsZXM6IE5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCBvciBTVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZJ1xyXG4gICk7XHJcbn1cclxuXHJcbi8vIFNwcmF3ZMW6LCBjenkgem1pZW5uZSBzxIUgcG9wcmF3bmUgcHJ6ZWQgdXR3b3J6ZW5pZW0ga2xpZW50YVxyXG5jb25zdCBpc0NvbmZpZ1ZhbGlkID0gc3VwYWJhc2VVcmwgJiYgc3VwYWJhc2VTZXJ2aWNlS2V5O1xyXG5cclxuLy8gVXdhZ2E6IFRlbiBrbGllbnQgbWEgcGXFgm5lIHVwcmF3bmllbmlhIGRvIGJhenkgZGFueWNoLCB1xbx5d2FqIG9zdHJvxbxuaWUhXHJcbmNvbnN0IHN1cGFiYXNlQWRtaW4gPSBpc0NvbmZpZ1ZhbGlkIFxyXG4gID8gY3JlYXRlQ2xpZW50KHN1cGFiYXNlVXJsLCBzdXBhYmFzZVNlcnZpY2VLZXksIHtcclxuICAgICAgYXV0aDoge1xyXG4gICAgICAgIHBlcnNpc3RTZXNzaW9uOiBmYWxzZSxcclxuICAgICAgICBhdXRvUmVmcmVzaFRva2VuOiBmYWxzZSxcclxuICAgICAgfSxcclxuICAgIH0pXHJcbiAgOiBudWxsO1xyXG5cclxuLy8gRnVua2NqYSBwb21vY25pY3phIGRvIG9ic8WCdWdpIGLFgsSZZMOzdyBTdXBhYmFzZVxyXG5leHBvcnQgY29uc3QgaGFuZGxlU3VwYWJhc2VBZG1pbkVycm9yID0gKGVycm9yKSA9PiB7XHJcbiAgY29uc29sZS5lcnJvcignU3VwYWJhc2UgQWRtaW4gZXJyb3I6JywgZXJyb3IpO1xyXG4gIFxyXG4gIHJldHVybiB7XHJcbiAgICBlcnJvcjogdHJ1ZSxcclxuICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UgfHwgJ05pZW9jemVraXdhbnkgYsWCxIVkIGFkbWluaXN0cmF0b3JhJyxcclxuICAgIGNvZGU6IGVycm9yLmNvZGUgfHwgJ3Vua25vd25fZXJyb3InLFxyXG4gICAgZGV0YWlsczogZXJyb3IuZGV0YWlscyB8fCBudWxsLFxyXG4gIH07XHJcbn07XHJcblxyXG4vLyBGdW5rY2plIGFkbWluaXN0cmF0b3JhIGRvIHphcnrEhWR6YW5pYSB1xbx5dGtvd25pa2FtaVxyXG5cclxuLy8gRnVua2NqYSBkbyB0d29yemVuaWEgcHJvZmlsdSB1xbx5dGtvd25pa2EgcHJ6ZXogYWRtaW5pc3RyYXRvcmFcclxuZXhwb3J0IGNvbnN0IGNyZWF0ZVVzZXJQcm9maWxlQWRtaW4gPSBhc3luYyAodXNlclByb2ZpbGUpID0+IHtcclxuICB0cnkge1xyXG4gICAgLy8gU3ByYXdkxbogY3p5IGtsaWVudCBqZXN0IGRvc3TEmXBueVxyXG4gICAgaWYgKCFzdXBhYmFzZUFkbWluKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignRGF0YWJhc2UgY2xpZW50IGlzIG5vdCBpbml0aWFsaXplZC4gQ2hlY2sgZW52aXJvbm1lbnQgdmFyaWFibGVzLicpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlQWRtaW5cclxuICAgICAgLmZyb20oJ3VzZXJfcHJvZmlsZXMnKVxyXG4gICAgICAuaW5zZXJ0KFt1c2VyUHJvZmlsZV0pXHJcbiAgICAgIC5zZWxlY3QoKVxyXG4gICAgICAuc2luZ2xlKCk7XHJcbiAgICBcclxuICAgIGlmIChlcnJvcikge1xyXG4gICAgICBpZiAoZXJyb3IuY29kZSA9PT0gJzIzNTA1Jykge1xyXG4gICAgICAgIGNvbnNvbGUud2FybignQWRtaW46IFByw7NiYSB1dHdvcnplbmlhIGR1cGxpa2F0dSBwcm9maWx1IHXFvHl0a293bmlrYTonLCBlcnJvcik7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gSmXFm2xpIHByb2ZpbCBqdcW8IGlzdG5pZWplLCBwb2JpZXJ6IGdvXHJcbiAgICAgICAgY29uc3QgeyBkYXRhOiBleGlzdGluZ1VzZXIsIGVycm9yOiBmZXRjaEVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXHJcbiAgICAgICAgICAuZnJvbSgndXNlcl9wcm9maWxlcycpXHJcbiAgICAgICAgICAuc2VsZWN0KCcqJylcclxuICAgICAgICAgIC5lcSgnZXh0ZXJuYWxfYXV0aF9pZCcsIHVzZXJQcm9maWxlLmV4dGVybmFsX2F1dGhfaWQpXHJcbiAgICAgICAgICAuc2luZ2xlKCk7XHJcbiAgICAgICAgICBcclxuICAgICAgICBpZiAoZmV0Y2hFcnJvcikge1xyXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdOaWUgbW/FvG5hIHBvYnJhxIcgaXN0bmllasSFY2VnbyBwcm9maWx1OiAnICsgZmV0Y2hFcnJvci5tZXNzYWdlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgcmV0dXJuIGV4aXN0aW5nVXNlcjtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IubWVzc2FnZSB8fCAnTmllIHVkYcWCbyBzacSZIHV0d29yennEhyBwcm9maWx1IHXFvHl0a293bmlrYScpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHJldHVybiBkYXRhO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBoYW5kbGVTdXBhYmFzZUFkbWluRXJyb3IoZXJyb3IpO1xyXG4gICAgdGhyb3cgZXJyb3I7XHJcbiAgfVxyXG59O1xyXG5cclxuLy8gRnVua2NqYSBkbyBwb2JpZXJhbmlhIHByb2ZpbHUgdcW8eXRrb3duaWthIHByemV6IGFkbWluaXN0cmF0b3JhXHJcbmV4cG9ydCBjb25zdCBnZXRVc2VyQnlBdXRoSWRBZG1pbiA9IGFzeW5jIChhdXRoSWQpID0+IHtcclxuICBpZiAoIWF1dGhJZCkgcmV0dXJuIG51bGw7XHJcbiAgXHJcbiAgdHJ5IHtcclxuICAgIC8vIFNwcmF3ZMW6IGN6eSBrbGllbnQgamVzdCBkb3N0xJlwbnlcclxuICAgIGlmICghc3VwYWJhc2VBZG1pbikge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0RhdGFiYXNlIGNsaWVudCBpcyBub3QgaW5pdGlhbGl6ZWQuIENoZWNrIGVudmlyb25tZW50IHZhcmlhYmxlcy4nKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXHJcbiAgICAgIC5mcm9tKCd1c2VyX3Byb2ZpbGVzJylcclxuICAgICAgLnNlbGVjdCgnKicpXHJcbiAgICAgIC5lcSgnZXh0ZXJuYWxfYXV0aF9pZCcsIGF1dGhJZClcclxuICAgICAgLnNpbmdsZSgpO1xyXG4gICAgXHJcbiAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgaWYgKGVycm9yLmNvZGUgPT09ICdQR1JTVDExNicpIHtcclxuICAgICAgICAvLyBOaWUgem5hbGV6aW9ubyAtIHRvIG5vcm1hbG55IHByenlwYWRla1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0FkbWluOiBCxYLEhWQgcG9iaWVyYW5pYSBwcm9maWx1IHXFvHl0a293bmlrYTonLCBlcnJvcik7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yLm1lc3NhZ2UgfHwgJ05pZSB1ZGHFgm8gc2nEmSBwb2JyYcSHIHByb2ZpbHUgdcW8eXRrb3duaWthJyk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgcmV0dXJuIGRhdGE7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGhhbmRsZVN1cGFiYXNlQWRtaW5FcnJvcihlcnJvcik7XHJcbiAgICB0aHJvdyBlcnJvcjtcclxuICB9XHJcbn07XHJcblxyXG4vLyBGdW5rY2phIGRvIGFrdHVhbGl6YWNqaSBwcm9maWx1IHXFvHl0a293bmlrYSBwcnpleiBhZG1pbmlzdHJhdG9yYVxyXG5leHBvcnQgY29uc3QgdXBkYXRlVXNlclByb2ZpbGVBZG1pbiA9IGFzeW5jICh1c2VySWQsIHVwZGF0ZXMpID0+IHtcclxuICB0cnkge1xyXG4gICAgLy8gU3ByYXdkxbogY3p5IGtsaWVudCBqZXN0IGRvc3TEmXBueVxyXG4gICAgaWYgKCFzdXBhYmFzZUFkbWluKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignRGF0YWJhc2UgY2xpZW50IGlzIG5vdCBpbml0aWFsaXplZC4gQ2hlY2sgZW52aXJvbm1lbnQgdmFyaWFibGVzLicpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlQWRtaW5cclxuICAgICAgLmZyb20oJ3VzZXJfcHJvZmlsZXMnKVxyXG4gICAgICAudXBkYXRlKHVwZGF0ZXMpXHJcbiAgICAgIC5lcSgnaWQnLCB1c2VySWQpXHJcbiAgICAgIC5zZWxlY3QoKVxyXG4gICAgICAuc2luZ2xlKCk7XHJcbiAgICBcclxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7XHJcbiAgICBcclxuICAgIHJldHVybiBkYXRhO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBoYW5kbGVTdXBhYmFzZUFkbWluRXJyb3IoZXJyb3IpO1xyXG4gICAgdGhyb3cgZXJyb3I7XHJcbiAgfVxyXG59O1xyXG5cclxuLy8gRnVua2NqYSBkbyBwb2JpZXJhbmlhIHBsYXRmb3JtIHN1YnNrcnlwY3lqbnljaCBwcnpleiBhZG1pbmlzdHJhdG9yYVxyXG5leHBvcnQgY29uc3QgZ2V0U3Vic2NyaXB0aW9uUGxhdGZvcm1zQWRtaW4gPSBhc3luYyAoKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIC8vIFNwcmF3ZMW6IGN6eSBrbGllbnQgamVzdCBkb3N0xJlwbnlcclxuICAgIGlmICghc3VwYWJhc2VBZG1pbikge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0RhdGFiYXNlIGNsaWVudCBpcyBub3QgaW5pdGlhbGl6ZWQuIENoZWNrIGVudmlyb25tZW50IHZhcmlhYmxlcy4nKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZUFkbWluXHJcbiAgICAgIC5mcm9tKCdzdWJzY3JpcHRpb25fcGxhdGZvcm1zJylcclxuICAgICAgLnNlbGVjdCgnKicpXHJcbiAgICAgIC5vcmRlcignbmFtZScpO1xyXG4gICAgXHJcbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yO1xyXG4gICAgXHJcbiAgICByZXR1cm4gZGF0YTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgaGFuZGxlU3VwYWJhc2VBZG1pbkVycm9yKGVycm9yKTtcclxuICAgIHJldHVybiBbXTtcclxuICB9XHJcbn07XHJcblxyXG4vLyBGdW5rY2phIGRvIHBvYmllcmFuaWEgY3rFgm9ua8OzdyBncnVweSBwcnpleiBhZG1pbmlzdHJhdG9yYVxyXG5leHBvcnQgY29uc3QgZ2V0R3JvdXBNZW1iZXJzQWRtaW4gPSBhc3luYyAoZ3JvdXBJZCkgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICAvLyBTcHJhd2TFuiBjenkga2xpZW50IGplc3QgZG9zdMSZcG55XHJcbiAgICBpZiAoIXN1cGFiYXNlQWRtaW4pIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdEYXRhYmFzZSBjbGllbnQgaXMgbm90IGluaXRpYWxpemVkLiBDaGVjayBlbnZpcm9ubWVudCB2YXJpYWJsZXMuJyk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VBZG1pblxyXG4gICAgICAuZnJvbSgnZ3JvdXBfbWVtYmVycycpXHJcbiAgICAgIC5zZWxlY3QoYFxyXG4gICAgICAgICosXHJcbiAgICAgICAgdXNlcjp1c2VyX3Byb2ZpbGVzKGlkLCBkaXNwbGF5X25hbWUsIGF2YXRhcl91cmwsIGVtYWlsKVxyXG4gICAgICBgKVxyXG4gICAgICAuZXEoJ2dyb3VwX2lkJywgZ3JvdXBJZCk7XHJcbiAgICBcclxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7XHJcbiAgICBcclxuICAgIHJldHVybiBkYXRhO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBoYW5kbGVTdXBhYmFzZUFkbWluRXJyb3IoZXJyb3IpO1xyXG4gICAgcmV0dXJuIFtdO1xyXG4gIH1cclxufTtcclxuXHJcbi8vIFphcGlzeiB3c3p5c3RraWUgYWt0eXdub8WbY2kgYWRtaW5pc3RyYXRvcmEgZG8gbG9ndSBiZXpwaWVjemXFhHN0d2FcclxuZXhwb3J0IGNvbnN0IGxvZ0FkbWluQWN0aXZpdHkgPSBhc3luYyAoYWN0aW9uLCByZXNvdXJjZVR5cGUsIHJlc291cmNlSWQsIGRldGFpbHMgPSB7fSkgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICAvLyBTcHJhd2TFuiBjenkga2xpZW50IGplc3QgZG9zdMSZcG55XHJcbiAgICBpZiAoIXN1cGFiYXNlQWRtaW4pIHtcclxuICAgICAgY29uc29sZS5lcnJvcignRGF0YWJhc2UgY2xpZW50IGlzIG5vdCBpbml0aWFsaXplZC4gQ291bGQgbm90IGxvZyBhY3Rpdml0eS4nKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlQWRtaW5cclxuICAgICAgLmZyb20oJ3NlY3VyaXR5X2xvZ3MnKVxyXG4gICAgICAuaW5zZXJ0KFt7XHJcbiAgICAgICAgYWN0aW9uX3R5cGU6IGFjdGlvbixcclxuICAgICAgICByZXNvdXJjZV90eXBlOiByZXNvdXJjZVR5cGUsXHJcbiAgICAgICAgcmVzb3VyY2VfaWQ6IHJlc291cmNlSWQsXHJcbiAgICAgICAgc3RhdHVzOiAnc3VjY2VzcycsXHJcbiAgICAgICAgZGV0YWlsczogZGV0YWlscyxcclxuICAgICAgfV0pO1xyXG4gICAgXHJcbiAgICBpZiAoZXJyb3IpIGNvbnNvbGUuZXJyb3IoJ0LFgsSFZCBsb2dvd2FuaWEgYWt0eXdub8WbY2kgYWRtaW5pc3RyYXRvcmE6JywgZXJyb3IpO1xyXG4gICAgXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ1d5asSFdGVrIHBvZGN6YXMgbG9nb3dhbmlhIGFrdHl3bm/Fm2NpIGFkbWluaXN0cmF0b3JhOicsIGVycm9yKTtcclxuICB9XHJcbn07XHJcblxyXG4vLyBGdW5rY2phIGRvIHphcnrEhWR6YW5pYSBwb3dpYWRvbWllbmlhbWkgdcW8eXRrb3duaWvDs3dcclxuZXhwb3J0IGNvbnN0IGNyZWF0ZU5vdGlmaWNhdGlvbiA9IGFzeW5jICh1c2VySWQsIHR5cGUsIHRpdGxlLCBjb250ZW50LCByZWxhdGVkRW50aXR5VHlwZSA9IG51bGwsIHJlbGF0ZWRFbnRpdHlJZCA9IG51bGwpID0+IHtcclxuICB0cnkge1xyXG4gICAgLy8gU3ByYXdkxbogY3p5IGtsaWVudCBqZXN0IGRvc3TEmXBueVxyXG4gICAgaWYgKCFzdXBhYmFzZUFkbWluKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignRGF0YWJhc2UgY2xpZW50IGlzIG5vdCBpbml0aWFsaXplZC4gQ2hlY2sgZW52aXJvbm1lbnQgdmFyaWFibGVzLicpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlQWRtaW5cclxuICAgICAgLmZyb20oJ25vdGlmaWNhdGlvbnMnKVxyXG4gICAgICAuaW5zZXJ0KFt7XHJcbiAgICAgICAgdXNlcl9pZDogdXNlcklkLFxyXG4gICAgICAgIHR5cGUsXHJcbiAgICAgICAgdGl0bGUsXHJcbiAgICAgICAgY29udGVudCxcclxuICAgICAgICByZWxhdGVkX2VudGl0eV90eXBlOiByZWxhdGVkRW50aXR5VHlwZSxcclxuICAgICAgICByZWxhdGVkX2VudGl0eV9pZDogcmVsYXRlZEVudGl0eUlkLFxyXG4gICAgICAgIGlzX3JlYWQ6IGZhbHNlLFxyXG4gICAgICAgIGNyZWF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcclxuICAgICAgICB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcclxuICAgICAgfV0pXHJcbiAgICAgIC5zZWxlY3QoKVxyXG4gICAgICAuc2luZ2xlKCk7XHJcbiAgICBcclxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7XHJcbiAgICBcclxuICAgIHJldHVybiBkYXRhO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBoYW5kbGVTdXBhYmFzZUFkbWluRXJyb3IoZXJyb3IpO1xyXG4gICAgdGhyb3cgZXJyb3I7XHJcbiAgfVxyXG59O1xyXG5cclxuLy8gRnVua2NqYSBkbyBwb2JpZXJhbmlhIG5pZXByemVjenl0YW55Y2ggcG93aWFkb21pZcWEIHXFvHl0a293bmlrYVxyXG5leHBvcnQgY29uc3QgZ2V0VW5yZWFkTm90aWZpY2F0aW9uc0NvdW50ID0gYXN5bmMgKHVzZXJJZCkgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICAvLyBTcHJhd2TFuiBjenkga2xpZW50IGplc3QgZG9zdMSZcG55XHJcbiAgICBpZiAoIXN1cGFiYXNlQWRtaW4pIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdEYXRhYmFzZSBjbGllbnQgaXMgbm90IGluaXRpYWxpemVkLiBDaGVjayBlbnZpcm9ubWVudCB2YXJpYWJsZXMuJyk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgeyBjb3VudCwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlQWRtaW5cclxuICAgICAgLmZyb20oJ25vdGlmaWNhdGlvbnMnKVxyXG4gICAgICAuc2VsZWN0KCcqJywgeyBjb3VudDogJ2V4YWN0JywgaGVhZDogdHJ1ZSB9KVxyXG4gICAgICAuZXEoJ3VzZXJfaWQnLCB1c2VySWQpXHJcbiAgICAgIC5lcSgnaXNfcmVhZCcsIGZhbHNlKTtcclxuICAgIFxyXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjtcclxuICAgIFxyXG4gICAgcmV0dXJuIGNvdW50IHx8IDA7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGhhbmRsZVN1cGFiYXNlQWRtaW5FcnJvcihlcnJvcik7XHJcbiAgICByZXR1cm4gMDtcclxuICB9XHJcbn07XHJcblxyXG4vLyBTcHJhd2TFuiBjenkga2xpZW50IGplc3QgcG9wcmF3bmllIHNrb25maWd1cm93YW55XHJcbmlmICghc3VwYWJhc2VBZG1pbikge1xyXG4gIGNvbnNvbGUuZXJyb3IoJ1VXQUdBOiBLbGllbnQgc3VwYWJhc2VBZG1pbiBuaWUgem9zdGHFgiB6YWluaWNqYWxpem93YW55IHBvcHJhd25pZS4gVXBld25paiBzacSZLCDFvGUgem1pZW5uZSDFm3JvZG93aXNrb3dlIHPEhSB1c3Rhd2lvbmUuJyk7XHJcbn1cclxuXHJcbi8vIEVrc3BvcnQga2xpZW50YSBhZG1pbmlzdHJhdG9yYSBqYWtvIGRvbXnFm2xueVxyXG5leHBvcnQgZGVmYXVsdCBzdXBhYmFzZUFkbWluOyJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJzdXBhYmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJzdXBhYmFzZVNlcnZpY2VLZXkiLCJTVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZIiwiY29uc29sZSIsImVycm9yIiwiaXNDb25maWdWYWxpZCIsInN1cGFiYXNlQWRtaW4iLCJhdXRoIiwicGVyc2lzdFNlc3Npb24iLCJhdXRvUmVmcmVzaFRva2VuIiwiaGFuZGxlU3VwYWJhc2VBZG1pbkVycm9yIiwibWVzc2FnZSIsImNvZGUiLCJkZXRhaWxzIiwiY3JlYXRlVXNlclByb2ZpbGVBZG1pbiIsInVzZXJQcm9maWxlIiwiRXJyb3IiLCJkYXRhIiwiZnJvbSIsImluc2VydCIsInNlbGVjdCIsInNpbmdsZSIsIndhcm4iLCJleGlzdGluZ1VzZXIiLCJmZXRjaEVycm9yIiwiZXEiLCJleHRlcm5hbF9hdXRoX2lkIiwiZ2V0VXNlckJ5QXV0aElkQWRtaW4iLCJhdXRoSWQiLCJ1cGRhdGVVc2VyUHJvZmlsZUFkbWluIiwidXNlcklkIiwidXBkYXRlcyIsInVwZGF0ZSIsImdldFN1YnNjcmlwdGlvblBsYXRmb3Jtc0FkbWluIiwib3JkZXIiLCJnZXRHcm91cE1lbWJlcnNBZG1pbiIsImdyb3VwSWQiLCJsb2dBZG1pbkFjdGl2aXR5IiwiYWN0aW9uIiwicmVzb3VyY2VUeXBlIiwicmVzb3VyY2VJZCIsImFjdGlvbl90eXBlIiwicmVzb3VyY2VfdHlwZSIsInJlc291cmNlX2lkIiwic3RhdHVzIiwiY3JlYXRlTm90aWZpY2F0aW9uIiwidHlwZSIsInRpdGxlIiwiY29udGVudCIsInJlbGF0ZWRFbnRpdHlUeXBlIiwicmVsYXRlZEVudGl0eUlkIiwidXNlcl9pZCIsInJlbGF0ZWRfZW50aXR5X3R5cGUiLCJyZWxhdGVkX2VudGl0eV9pZCIsImlzX3JlYWQiLCJjcmVhdGVkX2F0IiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwidXBkYXRlZF9hdCIsImdldFVucmVhZE5vdGlmaWNhdGlvbnNDb3VudCIsImNvdW50IiwiaGVhZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database/supabase-admin-client.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/database/supabase-client.js":
/*!*********************************************!*\
  !*** ./src/lib/database/supabase-client.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handleDatabaseError: () => (/* binding */ handleDatabaseError),\n/* harmony export */   offersRepository: () => (/* binding */ offersRepository),\n/* harmony export */   platformsRepository: () => (/* binding */ platformsRepository),\n/* harmony export */   purchasesRepository: () => (/* binding */ purchasesRepository),\n/* harmony export */   safeQueryExecution: () => (/* binding */ safeQueryExecution),\n/* harmony export */   userRepository: () => (/* binding */ userRepository)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var _supabase_admin_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase-admin-client */ \"(rsc)/./src/lib/database/supabase-admin-client.js\");\n// src/lib/database/supabase-client.js\n\n\n// Inicjalizacja klienta Supabase\nconst supabaseUrl = \"https://nimrnohkesysfppcmujb.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5pbXJub2hrZXN5c2ZwcGNtdWpiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ2MzI1ODgsImV4cCI6MjA2MDIwODU4OH0.xanoTueWzP87TJEZj3zNa8qyC3eRMooobIL71bjxdEs\";\n// Sprawdzenie, czy zmienne środowiskowe są ustawione\nif (!supabaseUrl || !supabaseAnonKey) {\n    console.error(\"Brak wymaganych zmiennych środowiskowych: NEXT_PUBLIC_SUPABASE_URL lub NEXT_PUBLIC_SUPABASE_ANON_KEY\");\n}\n// Stała instancja klienta Supabase do ponownego użycia w całej aplikacji\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(supabaseUrl, supabaseAnonKey);\n/**\r\n * Standardowa obsługa błędów Supabase \r\n * @param {Error} error - Błąd zwrócony przez Supabase\r\n * @param {string} operation - Nazwa operacji, która spowodowała błąd\r\n * @param {boolean} throwError - Czy wyrzucić błąd (true) czy zwrócić obiekt błędu (false)\r\n * @returns {Object} - Standardowy obiekt błędu (jeśli throwError = false)\r\n * @throws {Error} - Rzuca błąd (jeśli throwError = true)\r\n */ const handleDatabaseError = (error, operation = \"database operation\", throwError = false)=>{\n    // Tworzenie standardowego obiektu błędu\n    const standardError = {\n        error: true,\n        message: error.message || `Wystąpił błąd podczas ${operation}`,\n        code: error.code || \"unknown_error\",\n        details: error.details || null,\n        operation,\n        data: [] // Dodano pustą tablicę dla kompatybilności z klientem\n    };\n    // Zapisz szczegółowy log błędu\n    console.error(`Database error during ${operation}:`, {\n        message: error.message,\n        code: error.code,\n        details: error.details,\n        stack: error.stack\n    });\n    if (throwError) {\n        // Stwórz nowy obiekt błędu z dodatkowymi metadanymi\n        const enhancedError = new Error(standardError.message);\n        enhancedError.code = standardError.code;\n        enhancedError.details = standardError.details;\n        enhancedError.operation = operation;\n        enhancedError.data = []; // Dodano pustą tablicę dla kompatybilności\n        throw enhancedError;\n    }\n    return standardError;\n};\n/**\r\n * Bezpieczne wykonanie operacji Supabase z obsługą błędów i fallbackiem do klienta administratora\r\n * @param {Function} operation - Funkcja operacji Supabase do wykonania\r\n * @param {string} operationName - Nazwa operacji (dla logów)\r\n * @param {boolean} useAdminOnFailure - Czy próbować z klientem admin w przypadku błędu uprawnień\r\n * @param {boolean} throwOnError - Czy wyrzucać błędy zamiast zwracać null/[] \r\n * @returns {Promise<any>} - Wynik operacji lub null/[] w przypadku błędu\r\n */ const safeQueryExecution = async (operation, operationName = \"database operation\", useAdminOnFailure = true, throwOnError = false)=>{\n    try {\n        // Próba wykonania operacji ze standardowym klientem\n        const result = await operation(supabase);\n        // Jeśli wynik zawiera błąd\n        if (result.error) {\n            // Jeśli to błąd uprawnień i mamy fallback do admina\n            if (result.error.code === \"42501\" && useAdminOnFailure) {\n                console.log(`Permission denied during ${operationName}, trying admin client`);\n                // Próba wykonania tej samej operacji z klientem administratora\n                const adminResult = await operation(_supabase_admin_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n                if (adminResult.error) {\n                    return handleDatabaseError(adminResult.error, operationName, throwOnError);\n                }\n                // Upewnij się, że zwracamy dane w oczekiwanym formacie\n                if (Array.isArray(adminResult.data)) {\n                    return adminResult.data;\n                } else if (adminResult.data === null || adminResult.data === undefined) {\n                    return []; // Zwracamy pustą tablicę jeśli nie ma danych\n                } else {\n                    return adminResult.data; // Zwracamy pojedynczy obiekt\n                }\n            }\n            return handleDatabaseError(result.error, operationName, throwOnError);\n        }\n        // Upewnij się, że zwracamy dane w oczekiwanym formacie\n        if (Array.isArray(result.data)) {\n            return result.data;\n        } else if (result.data === null || result.data === undefined) {\n            return []; // Zwracamy pustą tablicę jeśli nie ma danych\n        } else {\n            return result.data; // Zwracamy pojedynczy obiekt\n        }\n    } catch (error) {\n        return handleDatabaseError(error, operationName, throwOnError);\n    }\n};\n// Repozytoria dostępu do danych - wysoki poziom abstrakcji\n/**\r\n * Repozytorium użytkowników\r\n */ const userRepository = {\n    /**\r\n   * Pobiera profil użytkownika na podstawie zewnętrznego ID uwierzytelniania\r\n   * @param {string} authId - ID uwierzytelniania (np. z Clerk)\r\n   * @returns {Promise<Object|null>} - Profil użytkownika lub null\r\n   */ async getByAuthId (authId) {\n        if (!authId) return null;\n        return safeQueryExecution((client)=>client.from(\"user_profiles\").select(\"*\").eq(\"external_auth_id\", authId).single(), \"getByAuthId\");\n    },\n    /**\r\n   * Tworzy nowy profil użytkownika\r\n   * @param {Object} userProfile - Dane profilu użytkownika\r\n   * @returns {Promise<Object|null>} - Utworzony profil użytkownika lub null\r\n   */ async create (userProfile) {\n        return safeQueryExecution((client)=>client.from(\"user_profiles\").insert([\n                userProfile\n            ]).select().single(), \"createUserProfile\", true // zawsze używaj klienta admina przy tworzeniu użytkownika\n        );\n    },\n    /**\r\n   * Aktualizuje istniejący profil użytkownika\r\n   * @param {string} userId - ID profilu użytkownika\r\n   * @param {Object} updates - Dane do aktualizacji\r\n   * @returns {Promise<Object|null>} - Zaktualizowany profil użytkownika lub null\r\n   */ async update (userId, updates) {\n        return safeQueryExecution((client)=>client.from(\"user_profiles\").update(updates).eq(\"id\", userId).select().single(), \"updateUserProfile\");\n    },\n    /**\r\n   * Pobiera profil użytkownika po ID\r\n   * @param {string} userId - ID profilu użytkownika\r\n   * @returns {Promise<Object|null>} - Profil użytkownika lub null\r\n   */ async getById (userId) {\n        return safeQueryExecution((client)=>client.from(\"user_profiles\").select(\"*\").eq(\"id\", userId).single(), \"getUserById\");\n    }\n};\n/**\r\n * Repozytorium ofert subskrypcji\r\n */ const offersRepository = {\n    /**\r\n   * Pobiera oferty subskrypcji z filtrowaniem\r\n   * @param {Object} filters - Filtry do zastosowania\r\n   * @returns {Promise<Array>} - Lista ofert\r\n   */ async getAll (filters = {}) {\n        // Przygotowanie bazowego zapytania\n        const queryBuilder = (client)=>{\n            let query = client.from(\"group_subs\").select(`\r\n          *,\r\n          subscription_platforms(*),\r\n          groups(id, name),\r\n          owner:groups!inner(owner_id, user_profiles!inner(id, display_name, avatar_url, rating_avg, rating_count, verification_level))\r\n        `).eq(\"status\", \"active\");\n            // Zastosowanie filtrów\n            if (filters.platformId) {\n                query = query.eq(\"platform_id\", filters.platformId);\n            }\n            if (filters.minPrice !== undefined) {\n                query = query.gte(\"price_per_slot\", filters.minPrice);\n            }\n            if (filters.maxPrice !== undefined) {\n                query = query.lte(\"price_per_slot\", filters.maxPrice);\n            }\n            if (filters.availableSlots === true) {\n                query = query.gt(\"slots_available\", 0);\n            }\n            // Sortowanie\n            const orderBy = filters.orderBy || \"created_at\";\n            const ascending = filters.ascending === true;\n            query = query.order(orderBy, {\n                ascending\n            });\n            // Paginacja\n            if (filters.limit) {\n                query = query.limit(filters.limit);\n            }\n            if (filters.offset) {\n                query = query.range(filters.offset, filters.offset + (filters.limit || 10) - 1);\n            }\n            return query;\n        };\n        return safeQueryExecution(queryBuilder, \"getAllOffers\") || [];\n    },\n    /**\r\n   * Pobiera ofertę subskrypcji po ID\r\n   * @param {string} offerId - ID oferty\r\n   * @returns {Promise<Object|null>} - Oferta subskrypcji lub null\r\n   */ async getById (offerId) {\n        return safeQueryExecution((client)=>client.from(\"group_subs\").select(`\r\n          *,\r\n          subscription_platforms(*),\r\n          groups(id, name, description),\r\n          owner:groups!inner(owner_id, user_profiles!inner(id, display_name, avatar_url, rating_avg, rating_count, verification_level, bio))\r\n        `).eq(\"id\", offerId).single(), \"getOfferById\");\n    },\n    /**\r\n   * Tworzy nową ofertę subskrypcji\r\n   * @param {Object} offerData - Dane oferty\r\n   * @returns {Promise<Object|null>} - Utworzona oferta lub null\r\n   */ async create (offerData) {\n        return safeQueryExecution((client)=>client.from(\"group_subs\").insert([\n                offerData\n            ]).select().single(), \"createOffer\");\n    },\n    /**\r\n   * Aktualizuje ofertę subskrypcji\r\n   * @param {string} offerId - ID oferty\r\n   * @param {Object} updates - Dane do aktualizacji\r\n   * @returns {Promise<Object|null>} - Zaktualizowana oferta lub null \r\n   */ async update (offerId, updates) {\n        return safeQueryExecution((client)=>client.from(\"group_subs\").update(updates).eq(\"id\", offerId).select().single(), \"updateOffer\");\n    },\n    /**\r\n   * Usuwa ofertę subskrypcji\r\n   * @param {string} offerId - ID oferty\r\n   * @returns {Promise<boolean>} - Czy operacja się powiodła\r\n   */ async delete (offerId) {\n        const result = await safeQueryExecution((client)=>client.from(\"group_subs\").delete().eq(\"id\", offerId), \"deleteOffer\");\n        return result !== null;\n    }\n};\n/**\r\n * Repozytorium platform subskrypcji\r\n */ const platformsRepository = {\n    /**\r\n   * Pobiera wszystkie aktywne platformy subskrypcji\r\n   * @returns {Promise<Array>} - Lista platform\r\n   */ async getAll () {\n        return safeQueryExecution((client)=>client.from(\"subscription_platforms\").select(\"*\").eq(\"active\", true).order(\"name\"), \"getAllPlatforms\") || [];\n    },\n    /**\r\n   * Pobiera platformę po ID\r\n   * @param {string} platformId - ID platformy\r\n   * @returns {Promise<Object|null>} - Platforma lub null\r\n   */ async getById (platformId) {\n        return safeQueryExecution((client)=>client.from(\"subscription_platforms\").select(\"*\").eq(\"id\", platformId).single(), \"getPlatformById\");\n    }\n};\n/**\r\n * Repozytorium zakupów\r\n */ const purchasesRepository = {\n    /**\r\n   * Tworzy nowy zakup\r\n   * @param {Object} purchaseData - Dane zakupu\r\n   * @returns {Promise<Object|null>} - Utworzony zakup lub null\r\n   */ async create (purchaseData) {\n        return safeQueryExecution((client)=>client.from(\"purchase_records\").insert([\n                purchaseData\n            ]).select().single(), \"createPurchase\", true // używaj klienta admin\n        );\n    },\n    /**\r\n   * Pobiera zakup po ID\r\n   * @param {string} purchaseId - ID zakupu\r\n   * @returns {Promise<Object|null>} - Zakup lub null\r\n   */ async getById (purchaseId) {\n        return safeQueryExecution((client)=>client.from(\"purchase_records\").select(`\r\n          *,\r\n          group_sub:group_subs(\r\n            *,\r\n            subscription_platforms(\r\n              id,\r\n              name,\r\n              icon\r\n            )\r\n          )\r\n        `).eq(\"id\", purchaseId).single(), \"getPurchaseById\");\n    },\n    /**\r\n   * Aktualizuje zakup\r\n   * @param {string} purchaseId - ID zakupu\r\n   * @param {Object} updates - Dane do aktualizacji\r\n   * @returns {Promise<Object|null>} - Zaktualizowany zakup lub null\r\n   */ async update (purchaseId, updates) {\n        return safeQueryExecution((client)=>client.from(\"purchase_records\").update(updates).eq(\"id\", purchaseId).select().single(), \"updatePurchase\");\n    },\n    /**\r\n   * Pobiera zakupy użytkownika\r\n   * @param {string} userId - ID użytkownika\r\n   * @returns {Promise<Array>} - Lista zakupów\r\n   */ async getByUserId (userId) {\n        return safeQueryExecution((client)=>client.from(\"purchase_records\").select(`\r\n          *,\r\n          group_sub:group_subs(\r\n            *,\r\n            subscription_platforms(\r\n              id,\r\n              name,\r\n              icon\r\n            )\r\n          )\r\n        `).eq(\"user_id\", userId).order(\"created_at\", {\n                ascending: false\n            }), \"getUserPurchases\") || [];\n    }\n};\n// Eksport podstawowego klienta Supabase\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (supabase);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database/supabase-client.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@clerk","vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/tslib","vendor-chunks/webidl-conversions","vendor-chunks/cookie","vendor-chunks/map-obj","vendor-chunks/no-case","vendor-chunks/lower-case","vendor-chunks/snakecase-keys","vendor-chunks/snake-case","vendor-chunks/dot-case"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fpurchases%2F%5Bid%5D%2Froute&page=%2Fapi%2Fpurchases%2F%5Bid%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fpurchases%2F%5Bid%5D%2Froute.js&appDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();