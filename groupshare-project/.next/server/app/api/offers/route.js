"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/offers/route";
exports.ids = ["app/api/offers/route"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("node:async_hooks");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Foffers%2Froute&page=%2Fapi%2Foffers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foffers%2Froute.js&appDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Foffers%2Froute&page=%2Fapi%2Foffers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foffers%2Froute.js&appDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_bacze_Project_GroupShare_groupshare_project_src_app_api_offers_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/offers/route.js */ \"(rsc)/./src/app/api/offers/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/offers/route\",\n        pathname: \"/api/offers\",\n        filename: \"route\",\n        bundlePath: \"app/api/offers/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\bacze\\\\Project\\\\GroupShare\\\\groupshare-project\\\\src\\\\app\\\\api\\\\offers\\\\route.js\",\n    nextConfigOutput,\n    userland: C_Users_bacze_Project_GroupShare_groupshare_project_src_app_api_offers_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/offers/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZvZmZlcnMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRm9mZmVycyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRm9mZmVycyUyRnJvdXRlLmpzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNiYWN6ZSU1Q1Byb2plY3QlNUNHcm91cFNoYXJlJTVDZ3JvdXBzaGFyZS1wcm9qZWN0JTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNiYWN6ZSU1Q1Byb2plY3QlNUNHcm91cFNoYXJlJTVDZ3JvdXBzaGFyZS1wcm9qZWN0JmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUMwQztBQUN2SDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2dyb3Vwc2hhcmUtcHJvamVjdC8/MjEzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxiYWN6ZVxcXFxQcm9qZWN0XFxcXEdyb3VwU2hhcmVcXFxcZ3JvdXBzaGFyZS1wcm9qZWN0XFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXG9mZmVyc1xcXFxyb3V0ZS5qc1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvb2ZmZXJzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvb2ZmZXJzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9vZmZlcnMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxiYWN6ZVxcXFxQcm9qZWN0XFxcXEdyb3VwU2hhcmVcXFxcZ3JvdXBzaGFyZS1wcm9qZWN0XFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXG9mZmVyc1xcXFxyb3V0ZS5qc1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvb2ZmZXJzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Foffers%2Froute&page=%2Fapi%2Foffers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foffers%2Froute.js&appDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/offers/route.js":
/*!*************************************!*\
  !*** ./src/app/api/offers/route.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(rsc)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js\");\n/* harmony import */ var _lib_database_supabase_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/database/supabase-client */ \"(rsc)/./src/lib/database/supabase-client.js\");\n/* harmony import */ var _lib_api_error_handler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/api/error-handler */ \"(rsc)/./src/lib/api/error-handler.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_3__);\n// src/app/api/offers/route.js\n\n\n\n\n\n// Schemat walidacji dla tworzenia oferty\nconst createOfferSchema = {\n    groupId: {\n        required: true\n    },\n    platformId: {\n        required: true\n    },\n    slotsTotal: {\n        required: true,\n        type: \"number\",\n        min: 1\n    },\n    pricePerSlot: {\n        required: true,\n        type: \"number\",\n        min: 0.01\n    },\n    accessInstructions: {\n        required: true,\n        minLength: 10\n    },\n    currency: {\n        type: \"string\"\n    }\n};\n/**\r\n * GET /api/offers\r\n * Pobiera oferty subskrypcji z opcjonalnym filtrowaniem\r\n */ async function GET(request) {\n    try {\n        // Parsuj parametry zapytania\n        const { searchParams } = new URL(request.url);\n        // Przygotuj filtry na podstawie parametrów\n        const filters = {\n            platformId: searchParams.get(\"platformId\"),\n            minPrice: searchParams.get(\"minPrice\") ? parseFloat(searchParams.get(\"minPrice\")) : undefined,\n            maxPrice: searchParams.get(\"maxPrice\") ? parseFloat(searchParams.get(\"maxPrice\")) : undefined,\n            availableSlots: searchParams.get(\"availableSlots\") !== \"false\",\n            orderBy: searchParams.get(\"orderBy\") || \"created_at\",\n            ascending: searchParams.get(\"ascending\") === \"true\",\n            limit: searchParams.get(\"limit\") ? parseInt(searchParams.get(\"limit\")) : 10,\n            page: searchParams.get(\"page\") ? parseInt(searchParams.get(\"page\")) : 1\n        };\n        // Oblicz offset na podstawie strony i limitu\n        filters.offset = (filters.page - 1) * filters.limit;\n        // Pobierz oferty z repozytorium\n        const offers = await _lib_database_supabase_client__WEBPACK_IMPORTED_MODULE_1__.offersRepository.getAll(filters);\n        return (0,_lib_api_error_handler__WEBPACK_IMPORTED_MODULE_2__.apiResponse)(offers);\n    } catch (error) {\n        return (0,_lib_api_error_handler__WEBPACK_IMPORTED_MODULE_2__.handleApiError)(error, \"Nie udało się pobrać ofert subskrypcji\");\n    }\n}\n/**\r\n * POST /api/offers\r\n * Tworzy nową ofertę subskrypcji\r\n */ async function POST(request) {\n    // Używamy protectApiRoute do zabezpieczenia endpointu z uwierzytelnianiem i walidacją\n    return (0,_lib_api_error_handler__WEBPACK_IMPORTED_MODULE_2__.protectApiRoute)(async (req)=>{\n        try {\n            // Pobierz dane z żądania (już zwalidowane przez protectApiRoute)\n            const body = await req.json();\n            // Dodatkowa walidacja\n            const { isValid, errors } = (0,_lib_api_error_handler__WEBPACK_IMPORTED_MODULE_2__.validateRequestBody)(createOfferSchema, body);\n            if (!isValid) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Validation error\",\n                    details: errors\n                }, {\n                    status: 400\n                });\n            }\n            // Pobierz użytkownika z Clerk\n            const user = await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_4__.currentUser)();\n            // Pobierz profil użytkownika\n            const userProfile = await _lib_database_supabase_client__WEBPACK_IMPORTED_MODULE_1__.userRepository.getByAuthId(user.id);\n            if (!userProfile) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"User profile not found\"\n                }, {\n                    status: 404\n                });\n            }\n            // Sprawdź, czy użytkownik jest właścicielem lub adminem grupy\n            const isAuthorized = await checkGroupPermission(body.groupId, userProfile.id);\n            if (!isAuthorized) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"You do not have permission to create offers for this group\"\n                }, {\n                    status: 403\n                });\n            }\n            // Przygotuj dane oferty\n            const offerData = {\n                group_id: body.groupId,\n                platform_id: body.platformId,\n                status: \"active\",\n                slots_total: body.slotsTotal,\n                slots_available: body.slotsTotal,\n                price_per_slot: body.pricePerSlot,\n                currency: body.currency || \"PLN\",\n                created_at: new Date().toISOString(),\n                updated_at: new Date().toISOString()\n            };\n            // Utwórz ofertę\n            const createdOffer = await _lib_database_supabase_client__WEBPACK_IMPORTED_MODULE_1__.offersRepository.create(offerData);\n            if (!createdOffer) {\n                throw new Error(\"Failed to create subscription offer\");\n            }\n            // Zapisz instrukcje dostępu\n            await saveAccessInstructions(createdOffer.id, body.accessInstructions);\n            // Zaloguj operację\n            await logSecurityEvent(userProfile.id, \"create\", \"group_sub\", createdOffer.id, {\n                group_id: body.groupId\n            });\n            return (0,_lib_api_error_handler__WEBPACK_IMPORTED_MODULE_2__.apiResponse)(createdOffer, 201, \"Oferta subskrypcji została utworzona pomyślnie\");\n        } catch (error) {\n            return (0,_lib_api_error_handler__WEBPACK_IMPORTED_MODULE_2__.handleApiError)(error, \"Failed to create subscription offer\");\n        }\n    })(request, {});\n}\n/**\r\n * Sprawdza uprawnienia użytkownika w grupie\r\n * @param {string} groupId - ID grupy\r\n * @param {string} userId - ID użytkownika\r\n * @returns {Promise<boolean>} - Czy użytkownik ma uprawnienia\r\n */ async function checkGroupPermission(groupId, userId) {\n    try {\n        // Sprawdź, czy użytkownik jest właścicielem grupy\n        const { data: group } = await supabaseAdmin.from(\"groups\").select(\"owner_id\").eq(\"id\", groupId).single();\n        if (group && group.owner_id === userId) {\n            return true;\n        }\n        // Jeśli nie jest właścicielem, sprawdź czy jest adminem\n        const { data: membership } = await supabaseAdmin.from(\"group_members\").select(\"role\").eq(\"group_id\", groupId).eq(\"user_id\", userId).eq(\"status\", \"active\").single();\n        return membership && membership.role === \"admin\";\n    } catch (error) {\n        console.error(\"Error checking group permission:\", error);\n        return false;\n    }\n}\n/**\r\n * Zapisuje instrukcje dostępu dla oferty\r\n * @param {string} groupSubId - ID oferty\r\n * @param {string} instructions - Instrukcje dostępu\r\n * @returns {Promise<boolean>} - Czy operacja się powiodła\r\n */ async function saveAccessInstructions(groupSubId, instructions) {\n    try {\n        // Pobierz lub wygeneruj klucz szyfrowania\n        let encryptionKeyId;\n        const { data: existingKey } = await supabaseAdmin.from(\"encryption_keys\").select(\"id\").eq(\"key_type\", \"master\").eq(\"active\", true).single();\n        if (existingKey) {\n            encryptionKeyId = existingKey.id;\n        } else {\n            // Generuj nowy klucz\n            const newKey = {\n                key_type: \"master\",\n                public_key: \"dummy_public_key_\" + Math.random().toString(36).substring(2),\n                private_key_enc: \"dummy_encrypted_private_key_\" + Math.random().toString(36).substring(2),\n                active: true,\n                created_at: new Date().toISOString()\n            };\n            const { data: createdKey } = await supabaseAdmin.from(\"encryption_keys\").insert([\n                newKey\n            ]).select(\"id\").single();\n            encryptionKeyId = createdKey?.id;\n        }\n        if (!encryptionKeyId) {\n            throw new Error(\"Failed to get or create encryption key\");\n        }\n        // \"Szyfrowanie\" instrukcji\n        const encryptedData = \"ENCRYPTED:\" + Buffer.from(instructions).toString(\"base64\");\n        const iv = generateRandomBytes(16).toString(\"hex\");\n        const dataKeyEnc = \"dummy_key_enc_\" + Math.random().toString(36).substring(2);\n        // Zapisz instrukcje\n        const { error } = await supabaseAdmin.from(\"access_instructions\").insert({\n            group_sub_id: groupSubId,\n            encrypted_data: encryptedData,\n            data_key_enc: dataKeyEnc,\n            encryption_key_id: encryptionKeyId,\n            iv: iv,\n            encryption_version: \"1.0\",\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n        });\n        return !error;\n    } catch (error) {\n        console.error(\"Error saving access instructions:\", error);\n        // Kontynuujemy mimo błędu, główna funkcjonalność została wykonana\n        return false;\n    }\n}\n/**\r\n * Loguje zdarzenie bezpieczeństwa\r\n * @param {string} userId - ID użytkownika\r\n * @param {string} actionType - Typ akcji\r\n * @param {string} resourceType - Typ zasobu\r\n * @param {string} resourceId - ID zasobu\r\n * @param {Object} details - Dodatkowe szczegóły\r\n */ async function logSecurityEvent(userId, actionType, resourceType, resourceId, details = {}) {\n    try {\n        await supabaseAdmin.from(\"security_logs\").insert({\n            user_id: userId,\n            action_type: actionType,\n            resource_type: resourceType,\n            resource_id: String(resourceId),\n            status: \"success\",\n            details: details,\n            created_at: new Date().toISOString()\n        });\n    } catch (error) {\n        console.error(\"Error logging security event:\", error);\n    }\n}\n/**\r\n * Funkcja generująca losowe bajty (alternatywa dla crypto.randomBytes)\r\n * Zmieniono nazwę z crypto() na generateRandomBytes() aby uniknąć konfliktu\r\n */ function generateRandomBytes(size) {\n    const values = new Uint8Array(size);\n    for(let i = 0; i < size; i++){\n        values[i] = Math.floor(Math.random() * 256);\n    }\n    return {\n        toString: (encoding)=>{\n            if (encoding === \"hex\") {\n                return Array.from(values).map((b)=>b.toString(16).padStart(2, \"0\")).join(\"\");\n            }\n            return String.fromCharCode.apply(null, values);\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/offers/route.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/api/error-handler.js":
/*!**************************************!*\
  !*** ./src/lib/api/error-handler.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiResponse: () => (/* binding */ apiResponse),\n/* harmony export */   handleApiError: () => (/* binding */ handleApiError),\n/* harmony export */   protectApiRoute: () => (/* binding */ protectApiRoute),\n/* harmony export */   validateRequestBody: () => (/* binding */ validateRequestBody)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n// src/lib/api/error-handler.js\n\n/**\r\n * Standardowa obsługa błędów API\r\n * @param {Error} error - Obiekt błędu\r\n * @param {number} defaultStatus - Domyślny kod statusu HTTP (opcjonalny, domyślnie 500)\r\n * @returns {NextResponse} - Ujednolicona odpowiedź błędu\r\n */ function handleApiError(error, defaultStatus = 500) {\n    console.error(\"API error:\", error);\n    // Określ szczegóły błędu na podstawie typu\n    let status = defaultStatus;\n    let message = error.message || \"Wystąpił nieoczekiwany błąd\";\n    let code = error.code || \"unknown_error\";\n    let details = error.details || null;\n    // Obsługa standardowych kodów błędów Supabase\n    if (error.code === \"PGRST116\") {\n        // Nie znaleziono rekordu - kod 404\n        status = 404;\n        message = \"Żądany zas\\xf3b nie został znaleziony\";\n        code = \"not_found\";\n    } else if (error.code === \"42501\") {\n        // Brak uprawnień - kod 403\n        status = 403;\n        message = \"Brak uprawnień do wykonania tej operacji\";\n        code = \"permission_denied\";\n    } else if (error.code === \"23505\") {\n        // Konflikt unikalności - kod 409\n        status = 409;\n        message = \"Zas\\xf3b o podanych danych już istnieje\";\n        code = \"resource_conflict\";\n    } else if (error.code === \"23502\") {\n        // Brak wymaganego pola - kod 400\n        status = 400;\n        message = \"Brak wymaganego pola\";\n        code = \"missing_required_field\";\n    }\n    // Zwróć ustandaryzowaną odpowiedź błędu\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        error: true,\n        message,\n        code,\n        details,\n        timestamp: new Date().toISOString()\n    }, {\n        status\n    });\n}\n/**\r\n * Generator odpowiedzi sukcesu API\r\n * @param {any} data - Dane do zwrócenia\r\n * @param {number} status - Kod statusu HTTP (opcjonalny, domyślnie 200)\r\n * @param {string} message - Opcjonalna wiadomość sukcesu\r\n * @returns {NextResponse} - Ujednolicona odpowiedź sukcesu\r\n */ function apiResponse(data, status = 200, message = null) {\n    const response = {\n        success: true,\n        data\n    };\n    if (message) {\n        response.message = message;\n    }\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response, {\n        status\n    });\n}\n/**\r\n * Sprawdza, czy żądanie zawiera poprawne dane\r\n * @param {Object} schema - Schemat walidacji (prosty obiekt z polami i warunkami)\r\n * @param {Object} body - Ciało żądania do walidacji\r\n * @returns {Object} - Obiekt { isValid, errors }\r\n */ function validateRequestBody(schema, body) {\n    const errors = {};\n    let isValid = true;\n    // Sprawdź, czy wszystkie wymagane pola są obecne\n    for (const [field, requirements] of Object.entries(schema)){\n        if (requirements.required && (body[field] === undefined || body[field] === null || body[field] === \"\")) {\n            errors[field] = `Pole '${field}' jest wymagane`;\n            isValid = false;\n            continue;\n        }\n        if (body[field] === undefined) continue;\n        // Sprawdź typ\n        if (requirements.type && typeof body[field] !== requirements.type) {\n            errors[field] = `Pole '${field}' musi być typu ${requirements.type}`;\n            isValid = false;\n        }\n        // Sprawdź minimalną wartość dla liczb\n        if (requirements.min !== undefined && typeof body[field] === \"number\" && body[field] < requirements.min) {\n            errors[field] = `Pole '${field}' musi być większe lub równe ${requirements.min}`;\n            isValid = false;\n        }\n        // Sprawdź maksymalną wartość dla liczb\n        if (requirements.max !== undefined && typeof body[field] === \"number\" && body[field] > requirements.max) {\n            errors[field] = `Pole '${field}' musi być mniejsze lub równe ${requirements.max}`;\n            isValid = false;\n        }\n        // Sprawdź minimalną długość dla stringów\n        if (requirements.minLength !== undefined && typeof body[field] === \"string\" && body[field].length < requirements.minLength) {\n            errors[field] = `Pole '${field}' musi mieć co najmniej ${requirements.minLength} znaków`;\n            isValid = false;\n        }\n        // Sprawdź maksymalną długość dla stringów\n        if (requirements.maxLength !== undefined && typeof body[field] === \"string\" && body[field].length > requirements.maxLength) {\n            errors[field] = `Pole '${field}' może mieć maksymalnie ${requirements.maxLength} znaków`;\n            isValid = false;\n        }\n        // Sprawdź wzorzec regex\n        if (requirements.pattern && typeof body[field] === \"string\" && !requirements.pattern.test(body[field])) {\n            errors[field] = requirements.patternMessage || `Pole '${field}' ma nieprawidłowy format`;\n            isValid = false;\n        }\n    }\n    return {\n        isValid,\n        errors\n    };\n}\n/**\r\n * Główna funkcja ochrony API - weryfikuje, autoryzuje i waliduje żądanie\r\n * @param {Function} handler - Funkcja obsługi żądania API\r\n * @param {Object} options - Opcje ochrony\r\n * @returns {Function} - Middleware zabezpieczające funkcję API\r\n */ function protectApiRoute(handler, options = {}) {\n    const { requireAuth = true, requiredRole = null, validationSchema = null } = options;\n    return async (request, context)=>{\n        try {\n            // 1. Sprawdź uwierzytelnienie, jeśli wymagane\n            if (requireAuth) {\n                const user = await currentUser();\n                if (!user) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: true,\n                        message: \"Unauthorized\",\n                        code: \"unauthorized\"\n                    }, {\n                        status: 401\n                    });\n                }\n                // Dołącz użytkownika do kontekstu dla funkcji obsługi\n                context.user = user;\n                // Sprawdź rolę, jeśli wymagana\n                if (requiredRole) {\n                    // Implementacja sprawdzania roli (uproszczona)\n                    const hasRole = await checkUserRole(user, requiredRole);\n                    if (!hasRole) {\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                            error: true,\n                            message: \"Insufficient permissions\",\n                            code: \"forbidden\"\n                        }, {\n                            status: 403\n                        });\n                    }\n                }\n            }\n            // 2. Sprawdź, czy mamy schemat walidacji dla metody POST/PUT/PATCH\n            if (validationSchema && [\n                \"POST\",\n                \"PUT\",\n                \"PATCH\"\n            ].includes(request.method)) {\n                const body = await request.json().catch(()=>({}));\n                const { isValid, errors } = validateRequestBody(validationSchema, body);\n                if (!isValid) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: true,\n                        message: \"Validation failed\",\n                        code: \"validation_error\",\n                        details: errors\n                    }, {\n                        status: 400\n                    });\n                }\n                // Przekaż zwalidowane dane do handlera\n                request.validatedBody = body;\n            }\n            // 3. Przekaż do właściwego handlera\n            return handler(request, context);\n        } catch (error) {\n            return handleApiError(error);\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/api/error-handler.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/database/supabase-admin-client.js":
/*!***************************************************!*\
  !*** ./src/lib/database/supabase-admin-client.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createUserProfileAdmin: () => (/* binding */ createUserProfileAdmin),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getGroupMembersAdmin: () => (/* binding */ getGroupMembersAdmin),\n/* harmony export */   getSubscriptionPlatformsAdmin: () => (/* binding */ getSubscriptionPlatformsAdmin),\n/* harmony export */   getUserByAuthIdAdmin: () => (/* binding */ getUserByAuthIdAdmin),\n/* harmony export */   handleSupabaseAdminError: () => (/* binding */ handleSupabaseAdminError),\n/* harmony export */   logAdminActivity: () => (/* binding */ logAdminActivity),\n/* harmony export */   updateUserProfileAdmin: () => (/* binding */ updateUserProfileAdmin)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n// src/lib/supabase-admin-client.js\n\n// Inicjalizacja klienta Supabase z uprawnieniami administratora\nconst supabaseUrl = \"https://nimrnohkesysfppcmujb.supabase.co\";\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n// Sprawdzenie czy zmienne środowiskowe są ustawione\nif (!supabaseUrl || !supabaseServiceKey) {\n    console.error(\"Missing environment variables: NEXT_PUBLIC_SUPABASE_URL or SUPABASE_SERVICE_ROLE_KEY\");\n}\n// Uwaga: Ten klient ma pełne uprawnienia do bazy danych, używaj ostrożnie!\nconst supabaseAdmin = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseServiceKey, {\n    auth: {\n        persistSession: false,\n        autoRefreshToken: false\n    }\n});\n// Funkcja pomocnicza do obsługi błędów Supabase\nconst handleSupabaseAdminError = (error)=>{\n    console.error(\"Supabase Admin error:\", error);\n    return {\n        error: true,\n        message: error.message || \"Nieoczekiwany błąd administratora\",\n        code: error.code || \"unknown_error\",\n        details: error.details || null\n    };\n};\n// Funkcje administratora do zarządzania użytkownikami\n// Funkcja do tworzenia profilu użytkownika przez administratora\nconst createUserProfileAdmin = async (userProfile)=>{\n    try {\n        const { data, error } = await supabaseAdmin.from(\"user_profiles\").insert([\n            userProfile\n        ]).select().single();\n        if (error) {\n            if (error.code === \"23505\") {\n                console.warn(\"Admin: Pr\\xf3ba utworzenia duplikatu profilu użytkownika:\", error);\n                // Jeśli profil już istnieje, pobierz go\n                const { data: existingUser, error: fetchError } = await supabaseAdmin.from(\"user_profiles\").select(\"*\").eq(\"external_auth_id\", userProfile.external_auth_id).single();\n                if (fetchError) {\n                    throw new Error(\"Nie można pobrać istniejącego profilu: \" + fetchError.message);\n                }\n                return existingUser;\n            } else {\n                throw new Error(error.message || \"Nie udało się utworzyć profilu użytkownika\");\n            }\n        }\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        throw error;\n    }\n};\n// Funkcja do pobierania profilu użytkownika przez administratora\nconst getUserByAuthIdAdmin = async (authId)=>{\n    if (!authId) return null;\n    try {\n        const { data, error } = await supabaseAdmin.from(\"user_profiles\").select(\"*\").eq(\"external_auth_id\", authId).single();\n        if (error) {\n            if (error.code === \"PGRST116\") {\n                // Nie znaleziono - to normalny przypadek\n                return null;\n            } else {\n                console.error(\"Admin: Błąd pobierania profilu użytkownika:\", error);\n                throw new Error(error.message || \"Nie udało się pobrać profilu użytkownika\");\n            }\n        }\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        throw error;\n    }\n};\n// Funkcja do aktualizacji profilu użytkownika przez administratora\nconst updateUserProfileAdmin = async (userId, updates)=>{\n    try {\n        const { data, error } = await supabaseAdmin.from(\"user_profiles\").update(updates).eq(\"id\", userId).select().single();\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        throw error;\n    }\n};\n// Funkcja do pobierania platform subskrypcyjnych przez administratora\nconst getSubscriptionPlatformsAdmin = async ()=>{\n    try {\n        const { data, error } = await supabaseAdmin.from(\"subscription_platforms\").select(\"*\").order(\"name\");\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        return [];\n    }\n};\n// Funkcja do pobierania członków grupy przez administratora\nconst getGroupMembersAdmin = async (groupId)=>{\n    try {\n        const { data, error } = await supabaseAdmin.from(\"group_members\").select(`\r\n        *,\r\n        user:user_profiles(id, display_name, avatar_url, email)\r\n      `).eq(\"group_id\", groupId);\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseAdminError(error);\n        return [];\n    }\n};\n// Zapisz wszystkie aktywności administratora do logu bezpieczeństwa\nconst logAdminActivity = async (action, resourceType, resourceId, details = {})=>{\n    try {\n        const { data, error } = await supabaseAdmin.from(\"security_logs\").insert([\n            {\n                action_type: action,\n                resource_type: resourceType,\n                resource_id: resourceId,\n                status: \"success\",\n                details: details\n            }\n        ]);\n        if (error) console.error(\"Błąd logowania aktywności administratora:\", error);\n    } catch (error) {\n        console.error(\"Wyjątek podczas logowania aktywności administratora:\", error);\n    }\n};\n// Eksport klienta administratora jako domyślny\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (supabaseAdmin);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database/supabase-admin-client.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/database/supabase-client.js":
/*!*********************************************!*\
  !*** ./src/lib/database/supabase-client.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handleDatabaseError: () => (/* binding */ handleDatabaseError),\n/* harmony export */   offersRepository: () => (/* binding */ offersRepository),\n/* harmony export */   platformsRepository: () => (/* binding */ platformsRepository),\n/* harmony export */   purchasesRepository: () => (/* binding */ purchasesRepository),\n/* harmony export */   safeQueryExecution: () => (/* binding */ safeQueryExecution),\n/* harmony export */   userRepository: () => (/* binding */ userRepository)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var _supabase_admin_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase-admin-client */ \"(rsc)/./src/lib/database/supabase-admin-client.js\");\n// src/lib/database/supabase-client.js\n\n\n// Inicjalizacja klienta Supabase\nconst supabaseUrl = \"https://nimrnohkesysfppcmujb.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5pbXJub2hrZXN5c2ZwcGNtdWpiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ2MzI1ODgsImV4cCI6MjA2MDIwODU4OH0.xanoTueWzP87TJEZj3zNa8qyC3eRMooobIL71bjxdEs\";\n// Sprawdzenie, czy zmienne środowiskowe są ustawione\nif (!supabaseUrl || !supabaseAnonKey) {\n    console.error(\"Brak wymaganych zmiennych środowiskowych: NEXT_PUBLIC_SUPABASE_URL lub NEXT_PUBLIC_SUPABASE_ANON_KEY\");\n}\n// Stała instancja klienta Supabase do ponownego użycia w całej aplikacji\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(supabaseUrl, supabaseAnonKey);\n/**\r\n * Standardowa obsługa błędów Supabase \r\n * @param {Error} error - Błąd zwrócony przez Supabase\r\n * @param {string} operation - Nazwa operacji, która spowodowała błąd\r\n * @param {boolean} throwError - Czy wyrzucić błąd (true) czy zwrócić obiekt błędu (false)\r\n * @returns {Object} - Standardowy obiekt błędu (jeśli throwError = false)\r\n * @throws {Error} - Rzuca błąd (jeśli throwError = true)\r\n */ const handleDatabaseError = (error, operation = \"database operation\", throwError = false)=>{\n    // Tworzenie standardowego obiektu błędu\n    const standardError = {\n        error: true,\n        message: error.message || `Wystąpił błąd podczas ${operation}`,\n        code: error.code || \"unknown_error\",\n        details: error.details || null,\n        operation\n    };\n    // Zapisz szczegółowy log błędu\n    console.error(`Database error during ${operation}:`, {\n        message: error.message,\n        code: error.code,\n        details: error.details,\n        stack: error.stack\n    });\n    if (throwError) {\n        // Stwórz nowy obiekt błędu z dodatkowymi metadanymi\n        const enhancedError = new Error(standardError.message);\n        enhancedError.code = standardError.code;\n        enhancedError.details = standardError.details;\n        enhancedError.operation = operation;\n        throw enhancedError;\n    }\n    return standardError;\n};\n/**\r\n * Bezpieczne wykonanie operacji Supabase z obsługą błędów i fallbackiem do klienta administratora\r\n * @param {Function} operation - Funkcja operacji Supabase do wykonania\r\n * @param {string} operationName - Nazwa operacji (dla logów)\r\n * @param {boolean} useAdminOnFailure - Czy próbować z klientem admin w przypadku błędu uprawnień\r\n * @param {boolean} throwOnError - Czy wyrzucać błędy zamiast zwracać null/[] \r\n * @returns {Promise<any>} - Wynik operacji lub null/[] w przypadku błędu\r\n */ const safeQueryExecution = async (operation, operationName = \"database operation\", useAdminOnFailure = true, throwOnError = false)=>{\n    try {\n        // Próba wykonania operacji ze standardowym klientem\n        const result = await operation(supabase);\n        // Jeśli wynik zawiera błąd\n        if (result.error) {\n            // Jeśli to błąd uprawnień i mamy fallback do admina\n            if (result.error.code === \"42501\" && useAdminOnFailure) {\n                console.log(`Permission denied during ${operationName}, trying admin client`);\n                // Próba wykonania tej samej operacji z klientem administratora\n                const adminResult = await operation(_supabase_admin_client__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n                if (adminResult.error) {\n                    return handleDatabaseError(adminResult.error, operationName, throwOnError);\n                }\n                return adminResult.data;\n            }\n            return handleDatabaseError(result.error, operationName, throwOnError);\n        }\n        return result.data;\n    } catch (error) {\n        return handleDatabaseError(error, operationName, throwOnError);\n    }\n};\n// Repozytoria dostępu do danych - wysoki poziom abstrakcji\n/**\r\n * Repozytorium użytkowników\r\n */ const userRepository = {\n    /**\r\n   * Pobiera profil użytkownika na podstawie zewnętrznego ID uwierzytelniania\r\n   * @param {string} authId - ID uwierzytelniania (np. z Clerk)\r\n   * @returns {Promise<Object|null>} - Profil użytkownika lub null\r\n   */ async getByAuthId (authId) {\n        if (!authId) return null;\n        return safeQueryExecution((client)=>client.from(\"user_profiles\").select(\"*\").eq(\"external_auth_id\", authId).single(), \"getByAuthId\");\n    },\n    /**\r\n   * Tworzy nowy profil użytkownika\r\n   * @param {Object} userProfile - Dane profilu użytkownika\r\n   * @returns {Promise<Object|null>} - Utworzony profil użytkownika lub null\r\n   */ async create (userProfile) {\n        return safeQueryExecution((client)=>client.from(\"user_profiles\").insert([\n                userProfile\n            ]).select().single(), \"createUserProfile\", true // zawsze używaj klienta admina przy tworzeniu użytkownika\n        );\n    },\n    /**\r\n   * Aktualizuje istniejący profil użytkownika\r\n   * @param {string} userId - ID profilu użytkownika\r\n   * @param {Object} updates - Dane do aktualizacji\r\n   * @returns {Promise<Object|null>} - Zaktualizowany profil użytkownika lub null\r\n   */ async update (userId, updates) {\n        return safeQueryExecution((client)=>client.from(\"user_profiles\").update(updates).eq(\"id\", userId).select().single(), \"updateUserProfile\");\n    },\n    /**\r\n   * Pobiera profil użytkownika po ID\r\n   * @param {string} userId - ID profilu użytkownika\r\n   * @returns {Promise<Object|null>} - Profil użytkownika lub null\r\n   */ async getById (userId) {\n        return safeQueryExecution((client)=>client.from(\"user_profiles\").select(\"*\").eq(\"id\", userId).single(), \"getUserById\");\n    }\n};\n/**\r\n * Repozytorium ofert subskrypcji\r\n */ const offersRepository = {\n    /**\r\n   * Pobiera oferty subskrypcji z filtrowaniem\r\n   * @param {Object} filters - Filtry do zastosowania\r\n   * @returns {Promise<Array>} - Lista ofert\r\n   */ async getAll (filters = {}) {\n        // Przygotowanie bazowego zapytania\n        const queryBuilder = (client)=>{\n            let query = client.from(\"group_subs\").select(`\r\n          *,\r\n          subscription_platforms(*),\r\n          groups(id, name),\r\n          owner:groups!inner(owner_id, user_profiles!inner(id, display_name, avatar_url, rating_avg, rating_count, verification_level))\r\n        `).eq(\"status\", \"active\");\n            // Zastosowanie filtrów\n            if (filters.platformId) {\n                query = query.eq(\"platform_id\", filters.platformId);\n            }\n            if (filters.minPrice !== undefined) {\n                query = query.gte(\"price_per_slot\", filters.minPrice);\n            }\n            if (filters.maxPrice !== undefined) {\n                query = query.lte(\"price_per_slot\", filters.maxPrice);\n            }\n            if (filters.availableSlots === true) {\n                query = query.gt(\"slots_available\", 0);\n            }\n            // Sortowanie\n            const orderBy = filters.orderBy || \"created_at\";\n            const ascending = filters.ascending === true;\n            query = query.order(orderBy, {\n                ascending\n            });\n            // Paginacja\n            if (filters.limit) {\n                query = query.limit(filters.limit);\n            }\n            if (filters.offset) {\n                query = query.range(filters.offset, filters.offset + (filters.limit || 10) - 1);\n            }\n            return query;\n        };\n        return safeQueryExecution(queryBuilder, \"getAllOffers\") || [];\n    },\n    /**\r\n   * Pobiera ofertę subskrypcji po ID\r\n   * @param {string} offerId - ID oferty\r\n   * @returns {Promise<Object|null>} - Oferta subskrypcji lub null\r\n   */ async getById (offerId) {\n        return safeQueryExecution((client)=>client.from(\"group_subs\").select(`\r\n          *,\r\n          subscription_platforms(*),\r\n          groups(id, name, description),\r\n          owner:groups!inner(owner_id, user_profiles!inner(id, display_name, avatar_url, rating_avg, rating_count, verification_level, bio))\r\n        `).eq(\"id\", offerId).single(), \"getOfferById\");\n    },\n    /**\r\n   * Tworzy nową ofertę subskrypcji\r\n   * @param {Object} offerData - Dane oferty\r\n   * @returns {Promise<Object|null>} - Utworzona oferta lub null\r\n   */ async create (offerData) {\n        return safeQueryExecution((client)=>client.from(\"group_subs\").insert([\n                offerData\n            ]).select().single(), \"createOffer\");\n    },\n    /**\r\n   * Aktualizuje ofertę subskrypcji\r\n   * @param {string} offerId - ID oferty\r\n   * @param {Object} updates - Dane do aktualizacji\r\n   * @returns {Promise<Object|null>} - Zaktualizowana oferta lub null \r\n   */ async update (offerId, updates) {\n        return safeQueryExecution((client)=>client.from(\"group_subs\").update(updates).eq(\"id\", offerId).select().single(), \"updateOffer\");\n    },\n    /**\r\n   * Usuwa ofertę subskrypcji\r\n   * @param {string} offerId - ID oferty\r\n   * @returns {Promise<boolean>} - Czy operacja się powiodła\r\n   */ async delete (offerId) {\n        const result = await safeQueryExecution((client)=>client.from(\"group_subs\").delete().eq(\"id\", offerId), \"deleteOffer\");\n        return result !== null;\n    }\n};\n/**\r\n * Repozytorium platform subskrypcji\r\n */ const platformsRepository = {\n    /**\r\n   * Pobiera wszystkie aktywne platformy subskrypcji\r\n   * @returns {Promise<Array>} - Lista platform\r\n   */ async getAll () {\n        return safeQueryExecution((client)=>client.from(\"subscription_platforms\").select(\"*\").eq(\"active\", true).order(\"name\"), \"getAllPlatforms\") || [];\n    },\n    /**\r\n   * Pobiera platformę po ID\r\n   * @param {string} platformId - ID platformy\r\n   * @returns {Promise<Object|null>} - Platforma lub null\r\n   */ async getById (platformId) {\n        return safeQueryExecution((client)=>client.from(\"subscription_platforms\").select(\"*\").eq(\"id\", platformId).single(), \"getPlatformById\");\n    }\n};\n/**\r\n * Repozytorium zakupów\r\n */ const purchasesRepository = {\n    /**\r\n   * Tworzy nowy zakup\r\n   * @param {Object} purchaseData - Dane zakupu\r\n   * @returns {Promise<Object|null>} - Utworzony zakup lub null\r\n   */ async create (purchaseData) {\n        return safeQueryExecution((client)=>client.from(\"purchase_records\").insert([\n                purchaseData\n            ]).select().single(), \"createPurchase\", true // używaj klienta admin\n        );\n    },\n    /**\r\n   * Pobiera zakup po ID\r\n   * @param {string} purchaseId - ID zakupu\r\n   * @returns {Promise<Object|null>} - Zakup lub null\r\n   */ async getById (purchaseId) {\n        return safeQueryExecution((client)=>client.from(\"purchase_records\").select(`\r\n          *,\r\n          group_sub:group_subs(\r\n            *,\r\n            subscription_platforms(\r\n              id,\r\n              name,\r\n              icon\r\n            )\r\n          )\r\n        `).eq(\"id\", purchaseId).single(), \"getPurchaseById\");\n    },\n    /**\r\n   * Aktualizuje zakup\r\n   * @param {string} purchaseId - ID zakupu\r\n   * @param {Object} updates - Dane do aktualizacji\r\n   * @returns {Promise<Object|null>} - Zaktualizowany zakup lub null\r\n   */ async update (purchaseId, updates) {\n        return safeQueryExecution((client)=>client.from(\"purchase_records\").update(updates).eq(\"id\", purchaseId).select().single(), \"updatePurchase\");\n    },\n    /**\r\n   * Pobiera zakupy użytkownika\r\n   * @param {string} userId - ID użytkownika\r\n   * @returns {Promise<Array>} - Lista zakupów\r\n   */ async getByUserId (userId) {\n        return safeQueryExecution((client)=>client.from(\"purchase_records\").select(`\r\n          *,\r\n          group_sub:group_subs(\r\n            *,\r\n            subscription_platforms(\r\n              id,\r\n              name,\r\n              icon\r\n            )\r\n          )\r\n        `).eq(\"user_id\", userId).order(\"created_at\", {\n                ascending: false\n            }), \"getUserPurchases\") || [];\n    }\n};\n// Eksport podstawowego klienta Supabase\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (supabase);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/database/supabase-client.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/@clerk","vendor-chunks/next","vendor-chunks/tslib","vendor-chunks/cookie","vendor-chunks/map-obj","vendor-chunks/no-case","vendor-chunks/lower-case","vendor-chunks/snakecase-keys","vendor-chunks/snake-case","vendor-chunks/dot-case","vendor-chunks/@supabase","vendor-chunks/whatwg-url","vendor-chunks/tr46","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Foffers%2Froute&page=%2Fapi%2Foffers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foffers%2Froute.js&appDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cbacze%5CProject%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();