"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/offers/route";
exports.ids = ["app/api/offers/route"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("node:async_hooks");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Foffers%2Froute&page=%2Fapi%2Foffers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foffers%2Froute.js&appDir=C%3A%5CUsers%5Cpawbak2%5CProjects%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cpawbak2%5CProjects%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Foffers%2Froute&page=%2Fapi%2Foffers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foffers%2Froute.js&appDir=C%3A%5CUsers%5Cpawbak2%5CProjects%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cpawbak2%5CProjects%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_pawbak2_Projects_GroupShare_groupshare_project_src_app_api_offers_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/offers/route.js */ \"(rsc)/./src/app/api/offers/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/offers/route\",\n        pathname: \"/api/offers\",\n        filename: \"route\",\n        bundlePath: \"app/api/offers/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\pawbak2\\\\Projects\\\\GroupShare\\\\groupshare-project\\\\src\\\\app\\\\api\\\\offers\\\\route.js\",\n    nextConfigOutput,\n    userland: C_Users_pawbak2_Projects_GroupShare_groupshare_project_src_app_api_offers_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/offers/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZvZmZlcnMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRm9mZmVycyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRm9mZmVycyUyRnJvdXRlLmpzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNwYXdiYWsyJTVDUHJvamVjdHMlNUNHcm91cFNoYXJlJTVDZ3JvdXBzaGFyZS1wcm9qZWN0JTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNwYXdiYWsyJTVDUHJvamVjdHMlNUNHcm91cFNoYXJlJTVDZ3JvdXBzaGFyZS1wcm9qZWN0JmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUM2QztBQUMxSDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2dyb3Vwc2hhcmUtcHJvamVjdC8/ODY3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxwYXdiYWsyXFxcXFByb2plY3RzXFxcXEdyb3VwU2hhcmVcXFxcZ3JvdXBzaGFyZS1wcm9qZWN0XFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXG9mZmVyc1xcXFxyb3V0ZS5qc1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvb2ZmZXJzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvb2ZmZXJzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9vZmZlcnMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxwYXdiYWsyXFxcXFByb2plY3RzXFxcXEdyb3VwU2hhcmVcXFxcZ3JvdXBzaGFyZS1wcm9qZWN0XFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXG9mZmVyc1xcXFxyb3V0ZS5qc1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvb2ZmZXJzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Foffers%2Froute&page=%2Fapi%2Foffers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foffers%2Froute.js&appDir=C%3A%5CUsers%5Cpawbak2%5CProjects%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cpawbak2%5CProjects%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/offers/route.js":
/*!*************************************!*\
  !*** ./src/app/api/offers/route.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_supabase_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/supabase-client.js */ \"(rsc)/./src/lib/supabase-client.js\");\n/* harmony import */ var _clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/nextjs/server */ \"(rsc)/./node_modules/@clerk/nextjs/dist/esm/app-router/server/currentUser.js\");\n// src/app/api/offers/route.js\n\n\n\n/**\r\n * GET /api/offers\r\n * Get subscription offers with optional filtering\r\n */ async function GET(request) {\n    try {\n        // Parse query parameters\n        const { searchParams } = new URL(request.url);\n        // Parse filters from query parameters\n        const filters = {\n            platformId: searchParams.get(\"platformId\") || undefined,\n            minPrice: searchParams.get(\"minPrice\") ? parseFloat(searchParams.get(\"minPrice\")) : undefined,\n            maxPrice: searchParams.get(\"maxPrice\") ? parseFloat(searchParams.get(\"maxPrice\")) : undefined,\n            availableSlots: searchParams.get(\"availableSlots\") !== \"false\",\n            orderBy: searchParams.get(\"orderBy\") || \"created_at\",\n            ascending: searchParams.get(\"ascending\") === \"true\",\n            limit: searchParams.get(\"limit\") ? parseInt(searchParams.get(\"limit\")) : 10,\n            offset: searchParams.get(\"offset\") ? parseInt(searchParams.get(\"offset\")) : 0\n        };\n        // Get subscription offers with filters\n        const offers = await (0,_lib_supabase_client_js__WEBPACK_IMPORTED_MODULE_1__.getSubscriptionOffers)(filters);\n        // Return the offers\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(offers);\n    } catch (error) {\n        console.error(\"Error fetching offers:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error.message || \"Failed to fetch subscription offers\",\n            code: error.code || \"unknown\"\n        }, {\n            status: 500\n        });\n    }\n}\n/**\r\n * POST /api/offers\r\n * Create a new subscription offer\r\n */ async function POST(request) {\n    try {\n        // Verify user is authenticated\n        const user = await (0,_clerk_nextjs_server__WEBPACK_IMPORTED_MODULE_2__.currentUser)();\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        // Parse request body\n        const body = await request.json();\n        // Validate required fields\n        const requiredFields = [\n            \"groupId\",\n            \"platformId\",\n            \"slotsTotal\",\n            \"pricePerSlot\",\n            \"accessInstructions\"\n        ];\n        for (const field of requiredFields){\n            if (!body[field]) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: `Missing required field: ${field}`\n                }, {\n                    status: 400\n                });\n            }\n        }\n        // Validate numeric fields\n        if (isNaN(parseFloat(body.pricePerSlot)) || parseFloat(body.pricePerSlot) <= 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Price per slot must be a positive number\"\n            }, {\n                status: 400\n            });\n        }\n        if (!Number.isInteger(body.slotsTotal) || body.slotsTotal <= 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Slots total must be a positive integer\"\n            }, {\n                status: 400\n            });\n        }\n        // Get user profile ID from Supabase\n        let userProfileResponse;\n        try {\n            userProfileResponse = await fetch(`${\"http://localhost:3000\"}/api/auth/profile`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (!userProfileResponse.ok) {\n                throw new Error(`Failed to fetch user profile: ${userProfileResponse.status}`);\n            }\n        } catch (error) {\n            console.error(\"Error fetching user profile:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to verify user profile\"\n            }, {\n                status: 500\n            });\n        }\n        const userProfile = await userProfileResponse.json();\n        if (!userProfile || !userProfile.id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User profile not found\"\n            }, {\n                status: 404\n            });\n        }\n        // Verify user is the owner or admin of the group\n        let groupMembershipResponse;\n        try {\n            groupMembershipResponse = await fetch(`${\"http://localhost:3000\"}/api/groups/${body.groupId}/members?userId=${userProfile.id}`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (!groupMembershipResponse.ok) {\n                if (groupMembershipResponse.status === 404) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: \"Group not found\"\n                    }, {\n                        status: 404\n                    });\n                } else {\n                    throw new Error(`Failed to verify group membership: ${groupMembershipResponse.status}`);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error verifying group membership:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to verify group membership\"\n            }, {\n                status: 500\n            });\n        }\n        const groupMembership = await groupMembershipResponse.json();\n        if (!groupMembership || groupMembership.role !== \"admin\" && !groupMembership.isOwner) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"You do not have permission to create offers for this group\"\n            }, {\n                status: 403\n            });\n        }\n        // Przygotowanie danych oferty\n        const offerData = {\n            group_id: body.groupId,\n            platform_id: body.platformId,\n            status: \"active\",\n            slots_total: body.slotsTotal,\n            slots_available: body.slotsTotal,\n            price_per_slot: body.pricePerSlot,\n            currency: body.currency || \"PLN\",\n            instant_access: true // Wszystkie oferty mają teraz natychmiastowy dostęp\n        };\n        // Tworzenie oferty w Supabase\n        let response;\n        try {\n            response = await fetch(`${\"http://localhost:3000\"}/api/supabase/group_subs`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${await user.getToken()}`\n                },\n                body: JSON.stringify(offerData)\n            });\n            if (!response.ok) {\n                const errorData = await response.json();\n                console.error(\"Failed to create offer:\", errorData);\n                if (response.status === 403) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: \"You do not have permission to create offers for this group\"\n                    }, {\n                        status: 403\n                    });\n                } else if (response.status === 400) {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: errorData.error || \"Invalid offer data\"\n                    }, {\n                        status: 400\n                    });\n                } else {\n                    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                        error: errorData.error || \"Failed to create subscription offer\"\n                    }, {\n                        status: response.status || 500\n                    });\n                }\n            }\n        } catch (error) {\n            console.error(\"Error creating offer in Supabase:\", error);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Failed to create subscription offer in database\"\n            }, {\n                status: 500\n            });\n        }\n        const createdOffer = await response.json();\n        // Sprawdzenie wyniku\n        if (!createdOffer || !createdOffer.id) {\n            console.warn(\"Offer creation response missing ID\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Offer was created but returned invalid data\"\n            }, {\n                status: 500\n            });\n        }\n        // Store access instructions in Supabase\n        try {\n            const instructionsResponse = await fetch(`${\"http://localhost:3000\"}/api/access-instructions`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": `Bearer ${await user.getToken()}`\n                },\n                body: JSON.stringify({\n                    groupSubId: createdOffer.id,\n                    instructions: body.accessInstructions\n                })\n            });\n            if (!instructionsResponse.ok) {\n                const errorData = await instructionsResponse.json();\n                console.error(\"Failed to save access instructions:\", errorData);\n            // Don't fail the entire operation, but log the error\n            // Could clean up the created offer, but it's still usable\n            }\n        } catch (error) {\n            console.error(\"Error saving access instructions:\", error);\n        // Don't fail the entire operation\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(createdOffer, {\n            status: 201\n        });\n    } catch (error) {\n        console.error(\"Error creating offer:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error.message || \"Failed to create subscription offer\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/offers/route.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase-client.js":
/*!************************************!*\
  !*** ./src/lib/supabase-client.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createApplication: () => (/* binding */ createApplication),\n/* harmony export */   createUserProfile: () => (/* binding */ createUserProfile),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getReceivedApplications: () => (/* binding */ getReceivedApplications),\n/* harmony export */   getSubscriptionOffer: () => (/* binding */ getSubscriptionOffer),\n/* harmony export */   getSubscriptionOffers: () => (/* binding */ getSubscriptionOffers),\n/* harmony export */   getSubscriptionPlatforms: () => (/* binding */ getSubscriptionPlatforms),\n/* harmony export */   getUserApplications: () => (/* binding */ getUserApplications),\n/* harmony export */   getUserByAuthId: () => (/* binding */ getUserByAuthId),\n/* harmony export */   handleSupabaseError: () => (/* binding */ handleSupabaseError),\n/* harmony export */   updateApplicationStatus: () => (/* binding */ updateApplicationStatus),\n/* harmony export */   updateUserProfile: () => (/* binding */ updateUserProfile)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n// src/lib/supabase-client.js\n\n// Initialize the Supabase client\nconst supabaseUrl = \"https://twiarwghktzljergqfsm.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InR3aWFyd2doa3R6bGplcmdxZnNtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM3MTMwNzgsImV4cCI6MjA1OTI4OTA3OH0.WJqpXziIp05aQLKpFhdqUZQNoF6JRqRTLKY1X4TEn2c\";\n// Check if environment variables are set\nif (!supabaseUrl || !supabaseAnonKey) {\n    console.error(\"Missing environment variables: NEXT_PUBLIC_SUPABASE_URL or NEXT_PUBLIC_SUPABASE_ANON_KEY\");\n}\n// Create a single instance of the Supabase client to reuse across the app\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n// Helper function to handle Supabase errors consistently\nconst handleSupabaseError = (error)=>{\n    console.error(\"Supabase error:\", error);\n    // Return a standardized error object\n    return {\n        error: true,\n        message: error.message || \"An unexpected error occurred\",\n        code: error.code || \"unknown_error\",\n        details: error.details || null\n    };\n};\n// Function to get a user profile by Clerk auth ID\nconst getUserByAuthId = async (authId)=>{\n    if (!authId) return null;\n    try {\n        const { data, error } = await supabase.from(\"user_profiles\").select(\"*\").eq(\"external_auth_id\", authId).single();\n        if (error) {\n            if (error.code === \"PGRST116\") {\n                // Nie znaleziono - to normalny przypadek, nie musimy logować\n                return null;\n            } else if (error.code === \"42501\") {\n                console.error(\"Permission denied when fetching user profile:\", error);\n                throw new Error(\"Permission denied when accessing user profile\");\n            } else {\n                console.error(\"Error fetching user profile:\", error);\n                throw new Error(error.message || \"Failed to fetch user profile\");\n            }\n        }\n        return data;\n    } catch (error) {\n        handleSupabaseError(error);\n        throw error; // Propagujemy błąd, aby wywołujący mógł go obsłużyć\n    }\n};\n// Function to create a new user profile\nconst createUserProfile = async (userProfile)=>{\n    try {\n        const { data, error } = await supabase.from(\"user_profiles\").insert([\n            userProfile\n        ]).select().single();\n        if (error) {\n            if (error.code === \"23505\") {\n                console.warn(\"Attempt to create duplicate user profile:\", error);\n                throw new Error(\"User profile already exists\");\n            } else if (error.code === \"42501\") {\n                console.error(\"Permission denied when creating user profile:\", error);\n                throw new Error(\"Permission denied when creating user profile\");\n            } else if (error.code === \"23502\") {\n                console.error(\"Missing required field for user profile:\", error);\n                throw new Error(\"Missing required field for user profile\");\n            } else {\n                console.error(\"Error creating user profile:\", error);\n                throw new Error(error.message || \"Failed to create user profile\");\n            }\n        }\n        if (!data) {\n            console.warn(\"No data returned after user profile creation\");\n            throw new Error(\"User profile may have been created but no data was returned\");\n        }\n        return data;\n    } catch (error) {\n        handleSupabaseError(error);\n        throw error;\n    }\n};\n// Function to update a user profile\nconst updateUserProfile = async (userId, updates)=>{\n    try {\n        const { data, error } = await supabase.from(\"user_profiles\").update(updates).eq(\"id\", userId).select().single();\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseError(error);\n        return null;\n    }\n};\n// Function to get active subscription platforms\nconst getSubscriptionPlatforms = async ()=>{\n    try {\n        const { data, error } = await supabase.from(\"subscription_platforms\").select(\"*\").eq(\"active\", true).order(\"name\");\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseError(error);\n        return [];\n    }\n};\n// Function to get active subscription offers\nconst getSubscriptionOffers = async (filters = {})=>{\n    try {\n        // Start with base query\n        let query = supabase.from(\"group_subs\").select(`\r\n        *,\r\n        subscription_platforms(*),\r\n        groups(id, name),\r\n        owner:groups!inner(owner_id, user_profiles!inner(id, display_name, avatar_url, rating_avg, rating_count, verification_level))\r\n      `).eq(\"status\", \"active\");\n        // Apply filters\n        if (filters.platformId) {\n            query = query.eq(\"platform_id\", filters.platformId);\n        }\n        if (filters.minPrice !== undefined) {\n            query = query.gte(\"price_per_slot\", filters.minPrice);\n        }\n        if (filters.maxPrice !== undefined) {\n            query = query.lte(\"price_per_slot\", filters.maxPrice);\n        }\n        if (filters.availableSlots === true) {\n            query = query.gt(\"slots_available\", 0);\n        }\n        // Add ordering\n        const orderBy = filters.orderBy || \"created_at\";\n        const ascending = filters.ascending === true;\n        query = query.order(orderBy, {\n            ascending\n        });\n        // Add pagination\n        if (filters.limit) {\n            query = query.limit(filters.limit);\n        }\n        if (filters.offset) {\n            query = query.range(filters.offset, filters.offset + (filters.limit || 10) - 1);\n        }\n        const { data, error } = await query;\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseError(error);\n        return [];\n    }\n};\n// Function to get a specific subscription offer\nconst getSubscriptionOffer = async (offerId)=>{\n    try {\n        const { data, error } = await supabase.from(\"group_subs\").select(`\r\n        *,\r\n        subscription_platforms(*),\r\n        groups(id, name, description),\r\n        owner:groups!inner(owner_id, user_profiles!inner(id, display_name, avatar_url, rating_avg, rating_count, verification_level, bio))\r\n      `).eq(\"id\", offerId).single();\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseError(error);\n        return null;\n    }\n};\n// Function to create a new application for a subscription\nconst createApplication = async (application)=>{\n    try {\n        const { data, error } = await supabase.from(\"applications\").insert([\n            application\n        ]).select().single();\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseError(error);\n        return null;\n    }\n};\n// Function to get user's applications\nconst getUserApplications = async (userId, status = null)=>{\n    try {\n        let query = supabase.from(\"applications\").select(`\r\n        *,\r\n        group_sub:group_subs(\r\n          id, \r\n          price_per_slot,\r\n          currency,\r\n          subscription_platforms(id, name, icon)\r\n        ),\r\n        seller:group_subs(\r\n          groups(\r\n            owner_id, \r\n            user_profiles!inner(id, display_name, avatar_url)\r\n          )\r\n        )\r\n      `).eq(\"user_id\", userId);\n        // Filter by status if provided\n        if (status) {\n            query = query.eq(\"status\", status);\n        }\n        // Order by created_at descending (newest first)\n        query = query.order(\"created_at\", {\n            ascending: false\n        });\n        const { data, error } = await query;\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseError(error);\n        return [];\n    }\n};\n// Function to get received applications for group subscriptions owned by user\nconst getReceivedApplications = async (userId, status = null)=>{\n    try {\n        let query = supabase.from(\"applications\").select(`\r\n        *,\r\n        group_sub:group_subs!inner(\r\n          id,\r\n          price_per_slot,\r\n          currency,\r\n          groups!inner(\r\n            id,\r\n            name,\r\n            owner_id\r\n          ),\r\n          subscription_platforms(id, name, icon)\r\n        ),\r\n        applicant:user_profiles!inner(\r\n          id,\r\n          display_name,\r\n          avatar_url,\r\n          rating_avg,\r\n          rating_count\r\n        )\r\n      `).eq(\"group_sub.groups.owner_id\", userId);\n        // Filter by status if provided\n        if (status) {\n            query = query.eq(\"status\", status);\n        }\n        // Order by created_at descending (newest first)\n        query = query.order(\"created_at\", {\n            ascending: false\n        });\n        const { data, error } = await query;\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseError(error);\n        return [];\n    }\n};\n// Function to update application status\nconst updateApplicationStatus = async (applicationId, status)=>{\n    try {\n        const { data, error } = await supabase.from(\"applications\").update({\n            status\n        }).eq(\"id\", applicationId).select().single();\n        if (error) throw error;\n        return data;\n    } catch (error) {\n        handleSupabaseError(error);\n        return null;\n    }\n};\n// Export the Supabase client\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (supabase);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase-client.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@clerk","vendor-chunks/tslib","vendor-chunks/cookie","vendor-chunks/map-obj","vendor-chunks/no-case","vendor-chunks/lower-case","vendor-chunks/snakecase-keys","vendor-chunks/snake-case","vendor-chunks/dot-case","vendor-chunks/@supabase","vendor-chunks/tr46","vendor-chunks/whatwg-url","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Foffers%2Froute&page=%2Fapi%2Foffers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Foffers%2Froute.js&appDir=C%3A%5CUsers%5Cpawbak2%5CProjects%5CGroupShare%5Cgroupshare-project%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cpawbak2%5CProjects%5CGroupShare%5Cgroupshare-project&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();